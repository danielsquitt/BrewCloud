[{"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\index.js":"1","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\App.js":"2","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\themeConfig.js":"3","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\CompanyProvider.js":"4","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\EventProvider.js":"5","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\AuthProvider.js":"6","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Main.jsx":"7","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\UserPool.js":"8","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\aws-exports.js":"9","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\graphql\\queries_user.js":"10","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Login.jsx":"11","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Container.jsx":"12","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\login\\Credentials.jsx":"13","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\login\\NewPassword.jsx":"14","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Footer.jsx":"15","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Navbar.jsx":"16","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Sidebar.jsx":"17","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\Dashboard.jsx":"18","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\componets\\CompanySelector.jsx":"19"},{"size":219,"mtime":1612381714631,"results":"20","hashOfConfig":"21"},{"size":670,"mtime":1613328382453,"results":"22","hashOfConfig":"21"},{"size":233,"mtime":1612687597106,"results":"23","hashOfConfig":"21"},{"size":3885,"mtime":1614207459526,"results":"24","hashOfConfig":"21"},{"size":1931,"mtime":1613587028513,"results":"25","hashOfConfig":"21"},{"size":6265,"mtime":1613925767299,"results":"26","hashOfConfig":"21"},{"size":909,"mtime":1613946037292,"results":"27","hashOfConfig":"21"},{"size":275,"mtime":1612382324527,"results":"28","hashOfConfig":"21"},{"size":793,"mtime":1613927749170,"results":"29","hashOfConfig":"21"},{"size":679,"mtime":1613924521525,"results":"30","hashOfConfig":"21"},{"size":2890,"mtime":1614198351832,"results":"31","hashOfConfig":"21"},{"size":1495,"mtime":1613946002381,"results":"32","hashOfConfig":"21"},{"size":3941,"mtime":1612982688813,"results":"33","hashOfConfig":"21"},{"size":7007,"mtime":1612702329396,"results":"34","hashOfConfig":"21"},{"size":153,"mtime":1612994745435,"results":"35","hashOfConfig":"21"},{"size":3721,"mtime":1614208130085,"results":"36","hashOfConfig":"21"},{"size":2798,"mtime":1613946077277,"results":"37","hashOfConfig":"21"},{"size":693,"mtime":1612994745436,"results":"38","hashOfConfig":"21"},{"size":1403,"mtime":1614207851678,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"9u55g1",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\index.js",[],["86","87"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\App.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\themeConfig.js",["88","89"],"import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport {blueGrey, red} from '@material-ui/core/colors';\r\n\r\nconst theme = createMuiTheme({\r\n    palette:{\r\n        background:{\r\n        } \r\n    }\r\n})\r\n\r\nexport default theme","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\CompanyProvider.js",["90","91"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\EventProvider.js",["92"],"import React, { useState, useRef} from 'react'\r\n\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nexport const EventContext = React.createContext()\r\n\r\nconst EventProvider = (props) => {\r\n\r\n    \r\n\r\n    const [alertArray, setalertArray] = useState([])\r\n\r\n    const newAlert = (severity, message) => {\r\n        console.log('severity', severity)\r\n        setalertArray(alertArray.concat([\r\n            genAlert(severity, message)\r\n    ]))\r\n    }\r\n\r\n    const genAlert = (severity, message)=>{\r\n        \r\n        console.log('severity', severity)\r\n        return(\r\n            <Snackbar \r\n                key={alertArray.length}\r\n                open={true} \r\n                autoHideDuration={10000} \r\n                onClose={()=>{deleteAlert(alertArray.length)}} \r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }} \r\n            >\r\n                <Alert \r\n                    onClose={()=>{deleteAlert(alertArray.length)}} \r\n                    severity={severity}\r\n                >\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n        )\r\n    }\r\n\r\n    const newError = (message)=>{\r\n        newAlert(\"error\", message)\r\n    }\r\n    const newWarning = (message)=>{\r\n        newAlert(\"warning\", message)\r\n    }\r\n    const newInfo = (message)=>{\r\n        newAlert(\"info\", message)\r\n    }\r\n    const newSuccess = (message)=>{\r\n        newAlert(\"success\", message)\r\n    }\r\n\r\n    const deleteAlert = (key)=> {\r\n        console.log('Delete', key)\r\n        const array = alertArray\r\n        array.splice(key, 1)\r\n        console.log('Array', alertArray)\r\n        setalertArray(array)\r\n    }\r\n\r\n \r\n\r\n    return (\r\n        <EventContext.Provider value={{newError, newWarning, newInfo, newSuccess}}>\r\n            {alertArray}\r\n            {props.children}\r\n        </EventContext.Provider>\r\n    )\r\n}\r\n\r\nexport default EventProvider\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\AuthProvider.js",["93"],"\r\n// LIBRARIS\r\nimport React, {useEffect, useState} from 'react'\r\nimport { CognitoUser, AuthenticationDetails } from \"amazon-cognito-identity-js\"\r\nimport Amplify from 'aws-amplify';\r\n\r\n// FILES\r\nimport Pool from '../UserPool';\r\nimport awsmobile from './../aws-exports';\r\n\r\nexport const AuthContext = React.createContext()\r\n\r\nconst AuthProvider = (props) => {\r\n\r\n    Amplify.configure(awsmobile);\r\n\r\n    // Athentification state\r\n    const [state, setState] = useState({logged: false, newPasswordRequired: false, loading: false})\r\n    \r\n    // Cognito objects\r\n    const [session, setSession] = useState(false)\r\n    const [user, setUser] = useState(false)\r\n    \r\n    // User data\r\n    const [UserInfo, setUserInfo] = useState(false)\r\n\r\n    // REFRESH TOKEN\r\n    //----------------------------------------------------------------------------------\r\n    useEffect(() => {\r\n        if (state.logged) {\r\n            const interval = session.accessToken.getExpiration()-session.accessToken.getIssuedAt()-15\r\n            const id = setInterval(() => {\r\n                refresh()\r\n                .then()\r\n            }, interval*1000)\r\n\r\n            return () => clearInterval(id)\r\n        }\r\n    }, [state.logged])\r\n    \r\n    // REFRESH\r\n    //----------------------------------------------------------------------------------\r\n    const refresh = async() => {\r\n        return await new Promise((resolve, reject) => {\r\n            if (user){\r\n                user.refreshSession(session.refreshToken, (err, session_new) =>{\r\n                    if(err){\r\n                        reject(err)\r\n                    }else{\r\n                        setSession({session_new})\r\n                        resolve(session_new)\r\n                    }\r\n                })\r\n            }else{\r\n                reject('User not set')\r\n            }\r\n        })\r\n    }\r\n    \r\n    // LOGIN\r\n    //----------------------------------------------------------------------------------\r\n    const login = async(Username, Password) => {\r\n        return await new Promise((resolve, reject) => {\r\n            setState({logged: false, loading: true})\r\n            authenticate(Username, Password)\r\n            .then((result) => {\r\n                if(result.requiredAttributes){\r\n                    setState({logged: false, newPasswordRequired: true, loading: false})\r\n                }else{\r\n                    setState({logged: true, newPasswordRequired: false, loading: false})\r\n                }\r\n                resolve(result)\r\n            })\r\n            .catch((err) => {\r\n                setState({logged: false, newPasswordRequired: false, loading: false})\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n    \r\n    // AUTHENTICATE\r\n    //----------------------------------------------------------------------------------\r\n    const authenticate = async(Username, Password) => {\r\n        return await new Promise((resolve, reject) => {\r\n            \r\n            var _user = new CognitoUser({ Username, Pool })    \r\n            _user.authenticateUser(new AuthenticationDetails({ Username, Password }), {\r\n                onSuccess: data => {\r\n                    setSession(data)\r\n                    setUser(_user)\r\n                    const {'cognito:username':username, name, family_name, email, sub, auth_time} = data.idToken.decodePayload()\r\n                    setUserInfo({username, name, family_name, email, sub, auth_time})\r\n                    resolve(data)\r\n                },\r\n                onFailure: err => {\r\n                    reject(err)\r\n                },\r\n                newPasswordRequired: (userAttributes, requiredAttributes) => {\r\n                    setUser(_user)\r\n                    resolve({userAttributes, requiredAttributes})\r\n                }\r\n            })\r\n        })\r\n    }\r\n    \r\n    // LOG OUT\r\n    //----------------------------------------------------------------------------------\r\n    const logout = () => {\r\n        const user = Pool.getCurrentUser()\r\n        if (user){\r\n            user.signOut()\r\n            setState({logged: false, loading: false, message: ''})\r\n            setSession(false)\r\n            setUser(false)\r\n        }\r\n    }\r\n    \r\n    // UPDATE USER PASSWORD\r\n    const updateUserPassword = async(Password, NewPassword, attributes) => {\r\n        return await new Promise((resolve, reject) => {\r\n            if (Password !== NewPassword){\r\n                reject(\"Password doesn't match:\", Password, NewPassword )\r\n            }else{\r\n                delete attributes.email_verified\r\n                user.completeNewPasswordChallenge(NewPassword, attributes, {\r\n                    onSuccess: (result) => {\r\n                        console.log('Success', result)\r\n                        login(user.username, NewPassword)\r\n                        .then((data) => {\r\n                            console.log('login', data)\r\n                            resolve(data)\r\n                        })\r\n                        .catch((err) => {\r\n                            reject(err)\r\n                        })\r\n                        resolve(result)\r\n                      },\r\n                      onFailure: (err) => {\r\n                        reject(err)\r\n                      }\r\n                })\r\n            }\r\n        })    \r\n    }\r\n\r\n    // GET ATRIBUTES\r\n    //----------------------------------------------------------------------------------\r\n    const getUserAtributes = async() => {\r\n        return await new Promise((resolve, reject) => {\r\n            user.getUserAttributes(function(err, attributes) {\r\n                if(err){\r\n                    reject(err)\r\n                }\r\n                const results = {}\r\n                for (let attribute of attributes){\r\n                    const {Name, Value} = attribute\r\n                    results[Name] = Value\r\n                }\r\n                resolve(results)\r\n            })\r\n        })\r\n    }\r\n    \r\n    // RETRURN\r\n    //----------------------------------------------------------------------------------\r\n    return (\r\n        <AuthContext.Provider value={{state, UserInfo, login, updateUserPassword, logout, getUserAtributes}}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthProvider","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Main.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\UserPool.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\aws-exports.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\graphql\\queries_user.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Login.jsx",["94","95"],"\r\n// Libraries\r\nimport React, {useEffect, useContext} from 'react'\r\nimport Credentials from './login/Credentials'\r\nimport NewPassword from \"./login/NewPassword\";\r\nimport {AuthContext} from \"./../context/AuthProvider\";\r\nimport { Container, Card, CardMedia } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useParams } from \"react-router-dom\";\r\nimport { EventContext } from \"../context/EventProvider\";\r\nimport { CompanyContext } from './../context/CompanyProvider';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardMedia: {\r\n        paddingTop: '30%', \r\n      },\r\n    card: {\r\n        marginTop: theme.spacing(5),\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n      },\r\n      submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n      },\r\n}))\r\n\r\nconst Login = (props) => {\r\n\r\n    let { id } = useParams()\r\n\r\n    const classes = useStyles();\r\n\r\n    const {state, login, logout, updateUserPassword } = useContext(AuthContext)\r\n    const {newError} = useContext(EventContext)\r\n    const {info, setCompanyName} = useContext(CompanyContext)\r\n\r\n    useEffect(() => {\r\n        logout()\r\n        if (!id) { id = 'IBS' }\r\n        setCompanyName(id)\r\n        credentialsOnSubmmit('Admin', 'Admin1234')\r\n    }, [id])\r\n\r\n    const newPasswordOnSubmmit = (Password, NewPassword, attributes)=>{\r\n        const func = async()=>{\r\n            updateUserPassword(Password, NewPassword, attributes)\r\n            .catch((error) => {\r\n                newError(error.message)\r\n                console.log('error', error)\r\n            })\r\n        }\r\n        func()\r\n    }\r\n\r\n    const credentialsOnSubmmit = (Username, Password)=>{\r\n        const func = async()=>{\r\n            login(Username, Password)\r\n            .catch((error) => {\r\n                newError(error.message)\r\n                console.log('error', error)\r\n            })\r\n        }\r\n        func()\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(state.logged){\r\n            props.history.push('/')\r\n        } \r\n\r\n    }, [state.logged])\r\n\r\n    return(\r\n        <Container maxWidth=\"xs\">\r\n            <Card className={classes.card}>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    className={classes.cardMedia}\r\n                    title=\"Company Image\"\r\n                    src={info.initImgURL}\r\n                />\r\n                {state.newPasswordRequired ? (\r\n                    <NewPassword \r\n                        onSubmit={newPasswordOnSubmmit}\r\n                        classes={classes}\r\n                    />\r\n                ) : (\r\n                    <Credentials \r\n                        onSubmit={credentialsOnSubmmit} \r\n                        classes={classes}\r\n                    />\r\n                )}\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Container.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\login\\Credentials.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\login\\NewPassword.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Footer.jsx",[],["96","97"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Navbar.jsx",["98"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Sidebar.jsx",["99","100"],"import React, {useContext} from 'react'\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme , Drawer, Divider, List, ListItem, ListItemIcon, ListItemText, Avatar, Typography } from \"@material-ui/core\";\r\nimport { MoveToInbox as InboxIcon, \r\n         Mail as MailIcon} from '@material-ui/icons';\r\nimport { CompanyContext } from './../../context/CompanyProvider';\r\n\r\n//import logo from \"./../../img/Logo.png\";\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n      },\r\n      drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: theme.spacing(9) + 1,\r\n        },\r\n      },\r\n      avatar: {\r\n        boxShadow: theme.shadows[3],\r\n      },\r\n      typography: {\r\n        fontSize: 16,\r\n      },\r\n}))\r\n\r\nconst SideBar = (props) => {\r\n\r\n    const {open, onClose, onOpen} = props\r\n\r\n    const classes = useStyles()\r\n    const theme = useTheme();\r\n\r\n    const {info} = useContext(CompanyContext)\r\n\r\n    return (\r\n        <Drawer \r\n          variant=\"permanent\"\r\n          className={clsx(classes.drawer, {\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n          })}\r\n          classes={{\r\n          paper: clsx({\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n          }),\r\n          }}\r\n          onClose={()=>{onClose()}}\r\n        >\r\n          <List>\r\n            <ListItem className={clsx(classes.root)} >\r\n              <ListItemIcon>\r\n                <Avatar alt=\"Logo\" src={info.faviIconUrl} className={classes.avatar} />\r\n              </ListItemIcon>\r\n              <ListItemText primary={<Typography variant=\"overline\" className={classes.typography}>{info.name}</Typography>}/>\r\n            </ListItem>\r\n          </List>\r\n          <Divider/>\r\n          <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n          ))}\r\n          </List>\r\n        <Divider />\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\Dashboard.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\componets\\CompanySelector.jsx",["101","102"],"import React, {useState} from 'react'\r\n\r\nimport {makeStyles, FormControl, InputLabel, } from '@material-ui/core';\r\nimport Select from \"react-select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      borderColor: 'white'\r\n    },\r\n    select: {\r\n      color: 'white',\r\n      //backgroundColor: 'blue'\r\n    },\r\n    label: {\r\n        color: 'white'  \r\n    },\r\n    icon: {\r\n        fill: 'white'  \r\n    },\r\n  }));\r\n\r\nconst CompanySelector = ({items, value, setValue}) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    \r\n    const colourStyles = {\r\n      option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n        // const color = chroma(data.color);\r\n        //console.log({ data, isDisabled, isFocused, isSelected });\r\n        return {\r\n          ...styles,\r\n          backgroundColor: isFocused ? \"#999999\" : null,\r\n          color: \"#333333\",\r\n        };\r\n      }\r\n    };\r\n\r\n    return (\r\n        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            \r\n            <Select\r\n              value={value}\r\n              onChange={setValue}\r\n              defaultValue={items[0]}\r\n              label=\"Single select\"\r\n              options={items}\r\n              styles={colourStyles}\r\n            >\r\n            </Select>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CompanySelector\r\n",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":9,"nodeType":"109","messageId":"110","endLine":2,"endColumn":17},{"ruleId":"107","severity":1,"message":"111","line":2,"column":19,"nodeType":"109","messageId":"110","endLine":2,"endColumn":22},{"ruleId":"112","severity":1,"message":"113","line":39,"column":8,"nodeType":"114","endLine":39,"endColumn":22,"suggestions":"115"},{"ruleId":"112","severity":1,"message":"116","line":49,"column":8,"nodeType":"114","endLine":49,"endColumn":37,"suggestions":"117"},{"ruleId":"107","severity":1,"message":"118","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":33},{"ruleId":"112","severity":1,"message":"119","line":39,"column":8,"nodeType":"114","endLine":39,"endColumn":22,"suggestions":"120"},{"ruleId":"112","severity":1,"message":"121","line":43,"column":25,"nodeType":"122","endLine":43,"endColumn":30},{"ruleId":"112","severity":1,"message":"123","line":75,"column":8,"nodeType":"114","endLine":75,"endColumn":22,"suggestions":"124"},{"ruleId":"103","replacedBy":"125"},{"ruleId":"105","replacedBy":"126"},{"ruleId":"112","severity":1,"message":"127","line":93,"column":8,"nodeType":"114","endLine":93,"endColumn":22,"suggestions":"128"},{"ruleId":"107","severity":1,"message":"129","line":46,"column":27,"nodeType":"109","messageId":"110","endLine":46,"endColumn":33},{"ruleId":"107","severity":1,"message":"130","line":49,"column":11,"nodeType":"109","messageId":"110","endLine":49,"endColumn":16},{"ruleId":"107","severity":1,"message":"131","line":1,"column":16,"nodeType":"109","messageId":"110","endLine":1,"endColumn":24},{"ruleId":"107","severity":1,"message":"132","line":3,"column":34,"nodeType":"109","messageId":"110","endLine":3,"endColumn":44},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'blueGrey' is defined but never used.","Identifier","unusedVar","'red' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCompanyList'. Either include it or remove the dependency array.","ArrayExpression",["135"],"React Hook useEffect has a missing dependency: 'info'. Either include it or remove the dependency array.",["136"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'refresh' and 'session.accessToken'. Either include them or remove the dependency array.",["137"],"Assignments to the 'id' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["138"],["133"],["134"],"React Hook useEffect has missing dependencies: 'loaded' and 'setActualCompany'. Either include them or remove the dependency array.",["139"],"'onOpen' is assigned a value but never used.","'theme' is assigned a value but never used.","'useState' is defined but never used.","'InputLabel' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [getCompanyList, state.logged]",{"range":"150","text":"151"},"Update the dependencies array to be: [info.name, info.faviIconUrl, info]",{"range":"152","text":"153"},"Update the dependencies array to be: [refresh, session.accessToken, state.logged]",{"range":"154","text":"155"},"Update the dependencies array to be: [props.history, state.logged]",{"range":"156","text":"157"},"Update the dependencies array to be: [companyValue, loaded, setActualCompany]",{"range":"158","text":"159"},[1144,1158],"[getCompanyList, state.logged]",[1381,1410],"[info.name, info.faviIconUrl, info]",[1192,1206],"[refresh, session.accessToken, state.logged]",[2069,2083],"[props.history, state.logged]",[2674,2688],"[companyValue, loaded, setActualCompany]"]
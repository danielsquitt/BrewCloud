[{"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\index.js":"1","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\App.js":"2","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\themeConfig.js":"3","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\CompanyProvider.js":"4","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\EventProvider.js":"5","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\AuthProvider.js":"6","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Main.jsx":"7","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\UserPool.js":"8","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\aws-exports.js":"9","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\graphql\\queries_user.js":"10","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Login.jsx":"11","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Container.jsx":"12","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\login\\Credentials.jsx":"13","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\login\\NewPassword.jsx":"14","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Footer.jsx":"15","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Navbar.jsx":"16","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Sidebar.jsx":"17","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\componets\\CompanySelector.jsx":"18","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarHeader.jsx":"19","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarUser.jsx":"20","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\userProfile\\Profile.jsx":"21","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\ContentMain.jsx":"22","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\Dashboard.jsx":"23","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarMenu.jsx":"24","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\ThreeLedTest.jsx":"25","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\WidgetBase.jsx":"26","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\DeviceProvider.js":"27","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\Amplify.js":"28","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceAdmin.jsx":"29"},{"size":219,"mtime":1612381714631,"results":"30","hashOfConfig":"31"},{"size":670,"mtime":1615833466198,"results":"32","hashOfConfig":"31"},{"size":176,"mtime":1615833466229,"results":"33","hashOfConfig":"31"},{"size":3883,"mtime":1615833466213,"results":"34","hashOfConfig":"31"},{"size":1955,"mtime":1615833466213,"results":"35","hashOfConfig":"31"},{"size":6219,"mtime":1616010706095,"results":"36","hashOfConfig":"31"},{"size":909,"mtime":1615833466198,"results":"37","hashOfConfig":"31"},{"size":275,"mtime":1612382324527,"results":"38","hashOfConfig":"31"},{"size":793,"mtime":1616009358593,"results":"39","hashOfConfig":"31"},{"size":1015,"mtime":1615833466229,"results":"40","hashOfConfig":"31"},{"size":2887,"mtime":1616014771765,"results":"41","hashOfConfig":"31"},{"size":1612,"mtime":1616013735808,"results":"42","hashOfConfig":"31"},{"size":3941,"mtime":1615836680334,"results":"43","hashOfConfig":"31"},{"size":7007,"mtime":1615836680521,"results":"44","hashOfConfig":"31"},{"size":153,"mtime":1612994745435,"results":"45","hashOfConfig":"46"},{"size":3723,"mtime":1615833466198,"results":"47","hashOfConfig":"31"},{"size":1891,"mtime":1616014566365,"results":"48","hashOfConfig":"31"},{"size":1378,"mtime":1615833466198,"results":"49","hashOfConfig":"31"},{"size":1135,"mtime":1616012335055,"results":"50","hashOfConfig":"31"},{"size":1605,"mtime":1616014759746,"results":"51","hashOfConfig":"31"},{"size":4552,"mtime":1616014135389,"results":"52","hashOfConfig":"31"},{"size":1991,"mtime":1616014072501,"results":"53","hashOfConfig":"31"},{"size":867,"mtime":1616014207309,"results":"54","hashOfConfig":"31"},{"size":1223,"mtime":1616014662388,"results":"55","hashOfConfig":"31"},{"size":3728,"mtime":1615833466213,"results":"56","hashOfConfig":"31"},{"size":3588,"mtime":1615833466213,"results":"57","hashOfConfig":"31"},{"size":5110,"mtime":1615833466213,"results":"58","hashOfConfig":"31"},{"size":492,"mtime":1615833466198,"results":"59","hashOfConfig":"31"},{"size":270,"mtime":1616014175128,"results":"60","hashOfConfig":"31"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"yjv75u",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"9u55g1",{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"63"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"63"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\index.js",[],["126","127"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\App.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\themeConfig.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\CompanyProvider.js",["128","129"],"\r\n// LIBRARIS\r\nimport React, {useState, useEffect, useContext, useRef} from 'react'\r\n\r\nimport { API, Storage } from 'aws-amplify'\r\nimport { companyByName, listCompanys } from './../graphql/queries_user'\r\nimport { EventContext } from \"../context/EventProvider\"\r\nimport { AuthContext } from \"../context/AuthProvider\";\r\n\r\n\r\n\r\nexport const CompanyContext = React.createContext()\r\n\r\nconst CompanyProvider = (props) => {\r\n\r\n    const {newError} = useContext(EventContext)\r\n    const {state} = useContext(AuthContext)\r\n    const [info, setInfo] = useState(false)\r\n\r\n    //const [companyList, setcompanyList] = useState([{}])\r\n    const [ActualCompany, setActualCompany] = useState(false)\r\n    const companyList = useRef(false)\r\n\r\n    useEffect(() => {\r\n        const func = async()=>{\r\n            if (state.logged){\r\n                try {\r\n                    const list = await getCompanyList()\r\n                    companyList.current = list\r\n                    setActualCompany(0)\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n                \r\n            }\r\n        }\r\n        func()\r\n    }, [state.logged])\r\n\r\n    useEffect(() => {\r\n        if(ActualCompany !== false) {\r\n            setInfo(companyList.current[ActualCompany])\r\n        }\r\n    }, [ActualCompany])\r\n\r\n    useEffect(() => {\r\n        setDocumentInfo(info)\r\n    }, [info.name, info.faviIconUrl])\r\n\r\n    const setCompanyName = (name)=>{\r\n        loadPublicInfo(name)\r\n    }\r\n\r\n    const getS3Url = async(key)=>{\r\n        try {\r\n            const url = await Storage.get(key,  {\r\n                download: false,\r\n            })\r\n            return url\r\n        } catch (error) {\r\n            console.log(error)\r\n            newError(error.message)\r\n            return ''\r\n        }\r\n    }\r\n\r\n    const loadPublicInfo = async(name)=>{\r\n        try {\r\n            // Get public info\r\n            const result = await API.graphql({ \r\n                query: companyByName, \r\n                variables: { name },\r\n                authMode: 'AWS_IAM' \r\n            })\r\n            const data = result.data.companyByName.items[0]\r\n\r\n            // Change Init imagen\r\n            const initImgURL = await getS3Url(data.initImg.key) \r\n            const faviIconUrl = await getS3Url(data.faviIcon.key)\r\n            setInfo({\r\n                id: '',\r\n                name: data.name,\r\n                initImgURL,\r\n                faviIconUrl\r\n            })\r\n\r\n        } catch (error) {\r\n            newError(error.message)\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const setDocumentInfo = (data) => {\r\n        // Change documment title\r\n        document.title= data.name\r\n\r\n        // Change favicon\r\n        const favicon= document.getElementById(\"favicon\")\r\n        favicon.href = data.faviIconUrl\r\n    }\r\n    \r\n    const getCompanyList = async()=>{\r\n        return await new Promise((resolve, reject) => {\r\n            API.graphql({ \r\n                query: listCompanys, \r\n            })\r\n            .then(async(result)=>{\r\n\r\n                var arr =result.data.listCompanys.items\r\n                var results = await Promise.all(arr.map(async (item) => {\r\n                    item['faviIconUrl'] = await getS3Url(item.faviIcon.key)\r\n                        delete item['faviIcon']\r\n                        item['initImgUrl'] = await getS3Url(item.initImg.key)\r\n                        delete item['initImg']\r\n                    return item;\r\n                }));\r\n                resolve(results)\r\n            })\r\n            .catch((err) => {\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <CompanyContext.Provider value={{info, setCompanyName, companyList: companyList.current, setActualCompany}}>\r\n            {props.children}\r\n        </CompanyContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CompanyProvider\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\EventProvider.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\AuthProvider.js",["130","131"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Main.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\UserPool.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\aws-exports.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\graphql\\queries_user.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Login.jsx",["132","133"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Container.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\login\\Credentials.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\login\\NewPassword.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Footer.jsx",[],["134","135"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Navbar.jsx",["136"],"import React, {useState, useContext, useEffect} from 'react'\r\nimport clsx from 'clsx';\r\nimport {AppBar, Toolbar, IconButton, makeStyles} from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CompanySelector from './componets/CompanySelector';\r\n\r\nimport { CompanyContext } from './../../context/CompanyProvider';\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonOpen: {\r\n\r\n    },\r\n    menuButtonClose: {\r\n        marginLeft: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: theme.spacing(9) + 1,\r\n        },\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n          }),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        //zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarOpen: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    appBarClose: {\r\n        marginLeft: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: theme.spacing(9) + 1,\r\n        },\r\n    }\r\n    \r\n}))\r\n\r\nconst Navbar = (props) => {\r\n\r\n    const {open, onClose, onOpen} = props\r\n    const classes = useStyle()\r\n\r\n    const {companyList, setActualCompany} = useContext(CompanyContext)\r\n\r\n    const [companyValue, setCompanyValue] = useState('')\r\n    const [list, setList] = useState([])\r\n    const [loaded, setloaded] = useState(false)\r\n\r\n    useEffect(() => {\r\n        //console.log('List', companyList);\r\n        if(companyList){\r\n            setList(companyList.map((item, index)=>{\r\n                return { value: index, label: item.name }\r\n              }))\r\n        }\r\n    }, [companyList])\r\n\r\n    useEffect(() => {\r\n        if (list.length > 1){\r\n            setloaded(true)\r\n            setCompanyValue(list[0])\r\n        }else{\r\n            setloaded(false)\r\n            setCompanyValue('')\r\n        }\r\n        //console.log(list);\r\n    }, [list])\r\n\r\n    useEffect(() => {\r\n        if (loaded){\r\n            setActualCompany(companyValue.value)\r\n        }\r\n    }, [companyValue])\r\n\r\n    const ClickHandler = ()=>{\r\n        if(open){\r\n            onClose()\r\n        } else {\r\n            onOpen()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppBar \r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarOpen]: open,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={ClickHandler}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, {\r\n                    [classes.menuButtonOpen]: open,\r\n                    [classes.menuButtonClose]: !open,\r\n                    })}\r\n                >\r\n                    <MenuIcon/>\r\n                </IconButton>\r\n                {\r\n                    loaded ? (<CompanySelector items={list} value={companyValue} setValue={setCompanyValue} />) : null\r\n                }\r\n                \r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Sidebar.jsx",["137","138","139","140","141","142"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\componets\\CompanySelector.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarHeader.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarUser.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\userProfile\\Profile.jsx",["143"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\ContentMain.jsx",["144"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\Dashboard.jsx",["145"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarMenu.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\ThreeLedTest.jsx",["146"],"import React, {useState, useEffect} from 'react'\r\nimport {Grid, Divider, Typography, IconButton} from '@material-ui/core';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport { red, green, blue } from '@material-ui/core/colors';\r\nimport WidgetBase from './WidgetBase'\r\n\r\nimport { PubSub } from './../../../../Amplify';\r\n\r\n\r\n\r\nconst ThreeLedTest = (props) => {\r\n\r\n    const [shadow, setShadow] = useState({reported:{led1: 'off', led2: 'off',led3: 'off'}})\r\n    useEffect(() => {\r\n        //console.log('asdasd', props.data.state)\r\n        if (props.data.state) setShadow(props.data.state)\r\n    }, [props.data.state])\r\n\r\n    useEffect(() => {\r\n        setTimeout(()=>{\r\n            const func = async() => {\r\n                await PubSub.publish(`$aws/things/${props.data.name}/shadow/name/${props.data.deviceType.shadownName}/get`, { msg: '' });\r\n            }\r\n            func()\r\n           }, 1000)\r\n    }, [])\r\n \r\n    const button = (state, name, _color)=>{\r\n        const intensity = state ? 500 : 900\r\n        return(\r\n            <Grid \r\n                item \r\n                component={IconButton} \r\n                align={'center'} \r\n                style={{ color: _color[intensity] }} \r\n                xs={4}\r\n                onClick={() => {upateButtonState(name, !state)}}\r\n            >\r\n                <FiberManualRecordIcon fontSize=\"large\" />\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    const upateButtonState = (name, state) => {\r\n        const func = async() => {\r\n            const desired = {}\r\n            desired[name] = state ? 'on' : 'off'\r\n            const msg = {desired}\r\n            await PubSub.publish(`$aws/things/${props.data.name}/shadow/name/${props.data.deviceType.shadownName}/update`, {state:{...msg}});\r\n        }\r\n        func()\r\n    }\r\n\r\n    return (\r\n        <WidgetBase data={props.data}>\r\n            <Grid container direction={'column'} spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Grid container>\r\n                        <Grid item xs={6}>\r\n                            <Grid container alignItems=\"center\" direction={'column'}>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    Temeperature\r\n                                </Grid>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    26º\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Grid container alignItems=\"center\" direction={'column'}>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    Humidity\r\n                                </Grid>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    73%\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Divider/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container> \r\n                        {button(shadow.reported.led1 === 'on', 'led1', red)}\r\n                        {button(shadow.reported.led2 === 'on', 'led2', green)}\r\n                        {button(shadow.reported.led3 === 'on', 'led3', blue)}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </WidgetBase>\r\n    )\r\n}\r\n\r\nexport default ThreeLedTest\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\WidgetBase.jsx",["147","148","149"],"import React, {useState, useContext, useEffect} from 'react'\r\nimport clsx from 'clsx';\r\nimport {makeStyles, Grid, Card, CardHeader, CardContent, Divider, Collapse, Avatar, IconButton } from '@material-ui/core';\r\nimport { red, green } from '@material-ui/core/colors';\r\nimport WifiIcon from '@material-ui/icons/Wifi';\r\nimport WifiOffIcon from '@material-ui/icons/WifiOff';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nimport { DeviceContext } from './../../../../context/DeviceProvider';\r\n\r\nimport { PubSub } from './../../../../Amplify';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatarConnected: {\r\n      backgroundColor: green[500],\r\n    },\r\n    avatarDisconnected: {\r\n      backgroundColor: red[500],\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    },\r\n    cardtitle: {\r\n        fontSize: '1.5rem',\r\n      },\r\n  }));\r\n\r\n  \r\n\r\nconst WidgetBase = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const {} = useContext(DeviceContext)\r\n\r\n    const [state, setstate] = useState(false)\r\n    useEffect(() => {\r\n        //console.log(props)\r\n        if (props.data) setstate(props.data.connected.state)\r\n    }, [props.data.connected.state])\r\n    \r\n    useEffect(() => {\r\n        setTimeout(()=>{\r\n            const func = async() => {\r\n                await PubSub.publish(`$aws/things/${props.data.name}/shadow/name/std/get`, { msg: '' });\r\n            }\r\n            func()\r\n           }, 1000)\r\n    }, [])\r\n    const [expanded, setExpanded] = useState(true);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n      };\r\n\r\n    const avatar = ()=>{\r\n        return(\r\n            <Avatar \r\n                aria-label=\"recipe\" \r\n                className={clsx(classes.avatar, {\r\n                    [classes.avatarConnected]:state ,\r\n                    [classes.avatarDisconnected]:!state ,\r\n                })}\r\n            >\r\n                {state ? (\r\n                    <WifiIcon/>\r\n                ) : (\r\n                    <WifiOffIcon/>\r\n                )}\r\n            </Avatar>\r\n        )\r\n    }\r\n\r\n    const action = ()=>{\r\n        return(\r\n            <IconButton\r\n                className={clsx(classes.expand, {\r\n                    [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n            >\r\n                <ExpandMoreIcon />\r\n            </IconButton>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} md={6} lg={4} xl={3}>\r\n            <Card elevation={3}>\r\n                <CardHeader\r\n                    avatar={avatar()}\r\n                    title={props.data.name}\r\n                    titleTypographyProps={{className: classes.cardtitle}}\r\n                    action={action()}\r\n                />\r\n                <Divider/>\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent>\r\n                        {props.children}\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default WidgetBase\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\DeviceProvider.js",["150","151"],"import React,  {useContext, useEffect, useState, useRef} from 'react'\r\n\r\nimport { CompanyContext } from './../context/CompanyProvider';\r\n\r\nimport {listDevices} from './../graphql/queries_user'\r\n\r\n\r\nimport {API, PubSub} from '../Amplify';\r\n\r\nexport const DeviceContext = React.createContext()\r\n\r\nconst DeviceProvider = (props) => {\r\n\r\n    const {info} = useContext(CompanyContext)\r\n    const [deviceList, setDeviceList] = useState([])\r\n    const subsTopicList = useRef([])\r\n\r\n    useEffect(() => {\r\n        var pub\r\n        const fuc = async() => {\r\n            if(info.id !== ''){\r\n                await getDeviceList()\r\n                .then((result) => {\r\n                    // Save device list\r\n                    setDeviceList(result.map((item) => {\r\n                        return({...item, connected: {version: 0, state: false}})\r\n                    }))\r\n                    // Save device topi subscriptions\r\n                    const topics = []\r\n                    result.forEach((element) => {\r\n                        topics.push(`$aws/things/${element.name}/shadow/name/std/get/accepted`)\r\n                        topics.push(`$aws/things/${element.name}/shadow/name/std/update/accepted`)\r\n                        topics.push(`$aws/things/${element.name}/shadow/name/${element.deviceType.shadownName}/get/accepted`)\r\n                        topics.push(`$aws/things/${element.name}/shadow/name/${element.deviceType.shadownName}/update/accepted`)\r\n                        //subsTopicList.current = subsTopicList.current.concat(topics)\r\n                    })\r\n                    pub = PubSub.subscribe(topics).subscribe({\r\n                        next: data => messageDispatcher(data.value),\r\n                        error: error => console.error('Error:',error),\r\n                        close: () => console.log('Done'),\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                })\r\n            }\r\n        }\r\n        fuc()\r\n        return(()=>{ if(pub){pub.unsubscribe()}} )\r\n    }, [info.id])\r\n\r\n    const messageDispatcher = (data) =>{\r\n        //console.log('Message received', data)\r\n        const topic=data[Object.getOwnPropertySymbols(data)[0]].split('/')\r\n\r\n        switch (topic[0]) {\r\n            case '$aws':\r\n                switch (topic[1]) {\r\n                    case 'things':\r\n                            const thingName = topic[2]\r\n                            const shadowName = topic[5]\r\n                            const result = topic[7] ? topic[7] : false\r\n                            if (result === 'accepted') {\r\n                                switch (shadowName) {\r\n                                    case 'std':\r\n                                        stdShadowHandler(thingName, data.state, data.version)\r\n                                        break;\r\n                                    case '3led':\r\n                                        devicehadowHandler(thingName, data.state, data.version)\r\n                                        break;\r\n                                \r\n                                    default:\r\n                                        break;\r\n                                }\r\n                            }\r\n                        break\r\n                    default:\r\n                        break\r\n                }\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    const stdShadowHandler = (thingName, payload, version) => {\r\n        setDeviceList((list) => {\r\n            //console.log(list, thingName, payload);\r\n            return (list.map((element) => {\r\n                //console.log(payload, payload.reported.connected);\r\n                if (element.name === thingName && version > element.connected.version) return ({...element, connected: {state: payload.reported.connected, version}})\r\n                return element\r\n            }))\r\n        })\r\n    }\r\n\r\n    const devicehadowHandler = (thingName, payload, version) => {\r\n        //console.log(thingName, payload, version);\r\n        setDeviceList((list) => {\r\n            return (list.map((element) => {\r\n                if (element.name === thingName) return ({...element, state: {...element.state, ...payload}})\r\n                return element\r\n            }))\r\n        })\r\n    }\r\n\r\n    const getDeviceList = async()=>{\r\n        return await new Promise((resolve, reject) => {\r\n            const filter = {\r\n                companyId: {\r\n                    eq: info.id\r\n                }\r\n            }\r\n\r\n            API.graphql({ \r\n                query: listDevices, \r\n                variables: {filter}\r\n            })\r\n            .then(async(result)=>{\r\n                var arr =result.data.listDevices.items\r\n                resolve(arr)\r\n            })\r\n            .catch((err) => {\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <DeviceContext.Provider value={{deviceList}}>\r\n            {props.children}\r\n        </DeviceContext.Provider>\r\n    )\r\n}\r\n\r\nexport default DeviceProvider\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\Amplify.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceAdmin.jsx",["152"],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":38,"column":8,"nodeType":"159","endLine":38,"endColumn":22,"suggestions":"160"},{"ruleId":"157","severity":1,"message":"161","line":48,"column":8,"nodeType":"159","endLine":48,"endColumn":37,"suggestions":"162"},{"ruleId":"157","severity":1,"message":"163","line":39,"column":8,"nodeType":"159","endLine":39,"endColumn":22,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":43,"column":11,"nodeType":"167","messageId":"168","endLine":43,"endColumn":18},{"ruleId":"157","severity":1,"message":"169","line":43,"column":25,"nodeType":"170","endLine":43,"endColumn":30},{"ruleId":"157","severity":1,"message":"171","line":75,"column":8,"nodeType":"159","endLine":75,"endColumn":22,"suggestions":"172"},{"ruleId":"153","replacedBy":"173"},{"ruleId":"155","replacedBy":"174"},{"ruleId":"157","severity":1,"message":"175","line":93,"column":8,"nodeType":"159","endLine":93,"endColumn":22,"suggestions":"176"},{"ruleId":"165","severity":1,"message":"177","line":3,"column":39,"nodeType":"167","messageId":"168","endLine":3,"endColumn":43},{"ruleId":"165","severity":1,"message":"178","line":3,"column":45,"nodeType":"167","messageId":"168","endLine":3,"endColumn":53},{"ruleId":"165","severity":1,"message":"179","line":3,"column":55,"nodeType":"167","messageId":"168","endLine":3,"endColumn":67},{"ruleId":"165","severity":1,"message":"180","line":3,"column":69,"nodeType":"167","messageId":"168","endLine":3,"endColumn":81},{"ruleId":"165","severity":1,"message":"181","line":4,"column":25,"nodeType":"167","messageId":"168","endLine":4,"endColumn":34},{"ruleId":"165","severity":1,"message":"182","line":5,"column":18,"nodeType":"167","messageId":"168","endLine":5,"endColumn":26},{"ruleId":"157","severity":1,"message":"183","line":45,"column":8,"nodeType":"159","endLine":45,"endColumn":10,"suggestions":"184"},{"ruleId":"185","severity":1,"message":"186","line":28,"column":5,"nodeType":"187","messageId":"188","endLine":28,"endColumn":12},{"ruleId":"157","severity":1,"message":"183","line":16,"column":6,"nodeType":"159","endLine":16,"endColumn":8,"suggestions":"189"},{"ruleId":"157","severity":1,"message":"190","line":26,"column":8,"nodeType":"159","endLine":26,"endColumn":10,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":52,"column":11,"nodeType":"194","messageId":"188","endLine":52,"endColumn":13},{"ruleId":"157","severity":1,"message":"195","line":58,"column":8,"nodeType":"159","endLine":58,"endColumn":36,"suggestions":"196"},{"ruleId":"157","severity":1,"message":"197","line":67,"column":8,"nodeType":"159","endLine":67,"endColumn":10,"suggestions":"198"},{"ruleId":"165","severity":1,"message":"199","line":16,"column":11,"nodeType":"167","messageId":"168","endLine":16,"endColumn":24},{"ruleId":"157","severity":1,"message":"200","line":50,"column":8,"nodeType":"159","endLine":50,"endColumn":17,"suggestions":"201"},{"ruleId":"157","severity":1,"message":"183","line":7,"column":10,"nodeType":"159","endLine":7,"endColumn":12,"suggestions":"202"},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCompanyList'. Either include it or remove the dependency array.","ArrayExpression",["205"],"React Hook useEffect has a missing dependency: 'info'. Either include it or remove the dependency array.",["206"],"React Hook useEffect has a missing dependency: 'user.signInUserSession.accessToken.payload.exp'. Either include it or remove the dependency array.",["207"],"no-unused-vars","'refresh' is assigned a value but never used.","Identifier","unusedVar","Assignments to the 'id' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["208"],["203"],["204"],"React Hook useEffect has missing dependencies: 'loaded' and 'setActualCompany'. Either include them or remove the dependency array.",["209"],"'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'setSelectedIndex'. Either include it or remove the dependency array. If 'setSelectedIndex' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["210"],"no-dupe-keys","Duplicate key 'content'.","ObjectExpression","unexpected",["211"],"React Hook useEffect has missing dependencies: 'props.data.deviceType.shadownName' and 'props.data.name'. Either include them or remove the dependency array.",["212"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["213"],"React Hook useEffect has a missing dependency: 'props.data.name'. Either include it or remove the dependency array.",["214"],"'subsTopicList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getDeviceList' and 'messageDispatcher'. Either include them or remove the dependency array.",["215"],["216"],"no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"227","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"227","fix":"238"},"Update the dependencies array to be: [getCompanyList, state.logged]",{"range":"239","text":"240"},"Update the dependencies array to be: [info.name, info.faviIconUrl, info]",{"range":"241","text":"242"},"Update the dependencies array to be: [state.logged, user.signInUserSession.accessToken.payload.exp]",{"range":"243","text":"244"},"Update the dependencies array to be: [props.history, state.logged]",{"range":"245","text":"246"},"Update the dependencies array to be: [companyValue, loaded, setActualCompany]",{"range":"247","text":"248"},"Update the dependencies array to be: [setSelectedIndex]",{"range":"249","text":"250"},{"range":"251","text":"250"},"Update the dependencies array to be: [props.data.deviceType.shadownName, props.data.name]",{"range":"252","text":"253"},"Update the dependencies array to be: [props.data, props.data.connected.state]",{"range":"254","text":"255"},"Update the dependencies array to be: [props.data.name]",{"range":"256","text":"257"},"Update the dependencies array to be: [getDeviceList, info.id, messageDispatcher]",{"range":"258","text":"259"},{"range":"260","text":"250"},[1142,1156],"[getCompanyList, state.logged]",[1379,1408],"[info.name, info.faviIconUrl, info]",[1130,1144],"[state.logged, user.signInUserSession.accessToken.payload.exp]",[2066,2080],"[props.history, state.logged]",[2676,2690],"[companyValue, loaded, setActualCompany]",[972,974],"[setSelectedIndex]",[438,440],[940,942],"[props.data.deviceType.shadownName, props.data.name]",[1582,1610],"[props.data, props.data.connected.state]",[1876,1878],"[props.data.name]",[2081,2090],"[getDeviceList, info.id, messageDispatcher]",[152,154]]
[{"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\index.js":"1","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\App.js":"2","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\themeConfig.js":"3","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\EventProvider.js":"4","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\CompanyProvider.js":"5","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\AuthProvider.js":"6","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Main.jsx":"7","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\Amplify.js":"8","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\UserPool.js":"9","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Container.jsx":"10","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Login.jsx":"11","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\aws-exports.js":"12","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\ContentMain.jsx":"13","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\login\\NewPassword.jsx":"14","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceAdmin.jsx":"15","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\userProfile\\Profile.jsx":"16","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\Dashboard.jsx":"17","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\DeviceProvider.js":"18","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\login\\Credentials.jsx":"19","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Sidebar.jsx":"20","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Navbar.jsx":"21","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\ThreeLedTest.jsx":"22","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarMenu.jsx":"23","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarUser.jsx":"24","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarHeader.jsx":"25","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\componets\\CompanySelector.jsx":"26","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\WidgetBase.jsx":"27","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceCardSelector.jsx":"28","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\TempControl.jsx":"29","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\TempPressureControl.jsx":"30","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\cards\\DeviceCardTempPressureControl.jsx":"31","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\cards\\DeviceCardBase.jsx":"32","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\cards\\DeviceCardTempControl.jsx":"33","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\cards\\DeviceCardThreeLedTest.jsx":"34","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceList.jsx":"35","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceListHeaderItem.jsx":"36","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\graphql\\mutations.js":"37","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\graphql\\queries.js":"38","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\graphql\\queries_user.js":"39","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\UserProvider.js":"40","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\users_admin\\UsersAdmin.jsx":"41","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\users_admin\\UserDetail.jsx":"42","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\users_admin\\UserList.jsx":"43"},{"size":219,"mtime":1612381714631,"results":"44","hashOfConfig":"45"},{"size":892,"mtime":1618063485946,"results":"46","hashOfConfig":"45"},{"size":209,"mtime":1617608965041,"results":"47","hashOfConfig":"45"},{"size":3171,"mtime":1617611127096,"results":"48","hashOfConfig":"45"},{"size":3962,"mtime":1618063451359,"results":"49","hashOfConfig":"45"},{"size":8399,"mtime":1618071369770,"results":"50","hashOfConfig":"45"},{"size":909,"mtime":1615833466198,"results":"51","hashOfConfig":"45"},{"size":492,"mtime":1618042653237,"results":"52","hashOfConfig":"45"},{"size":275,"mtime":1612382324527,"results":"53","hashOfConfig":"45"},{"size":1574,"mtime":1617472158251,"results":"54","hashOfConfig":"45"},{"size":2965,"mtime":1618423088871,"results":"55","hashOfConfig":"45"},{"size":1008,"mtime":1618093019773,"results":"56","hashOfConfig":"45"},{"size":2185,"mtime":1618072124489,"results":"57","hashOfConfig":"45"},{"size":7007,"mtime":1616014904998,"results":"58","hashOfConfig":"45"},{"size":1038,"mtime":1617610563905,"results":"59","hashOfConfig":"45"},{"size":15580,"mtime":1617858262631,"results":"60","hashOfConfig":"45"},{"size":1868,"mtime":1617610224364,"results":"61","hashOfConfig":"45"},{"size":10143,"mtime":1618424631837,"results":"62","hashOfConfig":"45"},{"size":3941,"mtime":1616014904998,"results":"63","hashOfConfig":"45"},{"size":1827,"mtime":1617610137747,"results":"64","hashOfConfig":"45"},{"size":3683,"mtime":1617610102796,"results":"65","hashOfConfig":"45"},{"size":3037,"mtime":1617472158262,"results":"66","hashOfConfig":"45"},{"size":1891,"mtime":1618083234567,"results":"67","hashOfConfig":"45"},{"size":1705,"mtime":1617611056541,"results":"68","hashOfConfig":"45"},{"size":1135,"mtime":1616014904982,"results":"69","hashOfConfig":"45"},{"size":1378,"mtime":1615833466198,"results":"70","hashOfConfig":"45"},{"size":3431,"mtime":1617610478657,"results":"71","hashOfConfig":"45"},{"size":926,"mtime":1617472158266,"results":"72","hashOfConfig":"45"},{"size":1490,"mtime":1617610336834,"results":"73","hashOfConfig":"45"},{"size":2140,"mtime":1617610368436,"results":"74","hashOfConfig":"45"},{"size":10220,"mtime":1618436225731,"results":"75","hashOfConfig":"45"},{"size":4537,"mtime":1617902391544,"results":"76","hashOfConfig":"45"},{"size":6996,"mtime":1618436204774,"results":"77","hashOfConfig":"45"},{"size":7768,"mtime":1618435884733,"results":"78","hashOfConfig":"45"},{"size":1097,"mtime":1617610652941,"results":"79","hashOfConfig":"45"},{"size":2102,"mtime":1617610645993,"results":"80","hashOfConfig":"45"},{"size":6814,"mtime":1618050451428,"results":"81","hashOfConfig":"45"},{"size":8290,"mtime":1618050451317,"results":"82","hashOfConfig":"45"},{"size":1042,"mtime":1618062846951,"results":"83","hashOfConfig":"45"},{"size":5036,"mtime":1618090208213,"results":"84","hashOfConfig":"45"},{"size":1400,"mtime":1618091369745,"results":"85","hashOfConfig":"45"},{"size":8655,"mtime":1618092122899,"results":"86","hashOfConfig":"45"},{"size":2336,"mtime":1618093862193,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"yjv75u",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"90"},"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\index.js",[],["179","180"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\App.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\themeConfig.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\EventProvider.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\CompanyProvider.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\AuthProvider.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Main.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\Amplify.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\UserPool.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Container.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Login.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\aws-exports.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\ContentMain.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\login\\NewPassword.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceAdmin.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\userProfile\\Profile.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\Dashboard.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\DeviceProvider.js",["181"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\login\\Credentials.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Sidebar.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Navbar.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\ThreeLedTest.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarMenu.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarUser.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarHeader.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\componets\\CompanySelector.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\WidgetBase.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceCardSelector.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\TempControl.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\TempPressureControl.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\cards\\DeviceCardTempPressureControl.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\cards\\DeviceCardBase.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\cards\\DeviceCardTempControl.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\cards\\DeviceCardThreeLedTest.jsx",["182","183","184","185"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceList.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceListHeaderItem.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\graphql\\mutations.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\graphql\\queries.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\graphql\\queries_user.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\UserProvider.js",["186"],"import React, {useContext, useEffect} from 'react'\r\n\r\nimport {API, Auth} from '../Amplify';\r\nimport {CompanyContext } from './../context/CompanyProvider'\r\n\r\nexport const UserContext = React.createContext()\r\n\r\nconst UserProvider = (props) => {\r\n\r\n    const {info} = useContext(CompanyContext)\r\n\r\n    useEffect(() => {\r\n        //console.log('Info:',info);\r\n        if(info.name && true){\r\n            const func = async()=>{\r\n                listUsers()\r\n                .then((userlist)=>{\r\n                    //console.log('userlist',userlist);\r\n                    userlist.forEach(async(element) => {\r\n                        //console.log('Element', element);\r\n                        await getUser(element.Username)\r\n                    })\r\n                })\r\n            }\r\n            func()\r\n        }\r\n    }, [info])\r\n\r\n    const listUsers = async() => {\r\n        return await new Promise(async(resolve, reject) => {\r\n            let apiName = 'AdminQueries';\r\n            let path = '/listUsersInGroup';\r\n            let headers= {\r\n                    'Content-Type' : 'application/json',\r\n                    Authorization: `${(await Auth.currentSession()).getAccessToken().getJwtToken()}`\r\n                } \r\n\r\n            const listAdmin = API.get(apiName, path, {queryStringParameters: {\"groupname\": `${info.name}Admin`}, headers})\r\n            const listProd = API.get(apiName, path, {queryStringParameters: {\"groupname\": `${info.name}Prod`}, headers})\r\n            const listViwer = API.get(apiName, path, {queryStringParameters: {\"groupname\": `${info.name}Viwer`}, headers})\r\n            \r\n            const userList = []\r\n\r\n            Promise.allSettled([listAdmin, listProd, listViwer])\r\n            .then(values =>{\r\n                //console.log(values)\r\n                values.forEach(usergroupList => {\r\n                    //console.log('usergroupList', usergroupList);\r\n                    if (usergroupList.status === \"fulfilled\") {\r\n                        usergroupList.value.Users.forEach(user => {\r\n                            //console.log('user', user);\r\n                            const _user = user\r\n                            delete _user.Attributes\r\n                            userList.push(_user)\r\n                        });\r\n                    }\r\n                });\r\n                //console.log(userList);\r\n                resolve(userList)\r\n            })\r\n        })\r\n    }\r\n\r\n    const getUser = async(username) => {\r\n        return await new Promise(async(resolve, reject) => {\r\n            const apiName = 'AdminQueries';\r\n            const pathUser = '/getUser';\r\n            const pathGroup = '/listGroupsForUser'\r\n            const headers= {\r\n                    'Content-Type' : 'application/json',\r\n                    Authorization: `${(await Auth.currentSession()).getAccessToken().getJwtToken()}`\r\n                } \r\n            const user = API.get(apiName, pathUser, {queryStringParameters: {\"username\": username}, headers})\r\n            const groups = API.get(apiName, pathGroup, {queryStringParameters: {\"username\": username}, headers})\r\n            Promise.allSettled([user, groups])\r\n            .then(result => {\r\n                //console.log('result', result);\r\n                // Check result\r\n                if(result[0].status === \"rejected\") reject(result[0].reason.response)\r\n                if(result[1].status === \"rejected\") reject(result[1].reason.response)\r\n\r\n                // Get user info\r\n                const _user = {...result[0].value}\r\n                _user.UserAttributes.forEach(element => {\r\n                    _user[element.Name] = element.Value\r\n                })\r\n                delete _user.UserAttributes\r\n\r\n                // Get user groups\r\n                const groups = []\r\n                result[1].value.Groups.forEach(element => {\r\n                    groups.push(element.GroupName)\r\n                })\r\n                _user['Groups'] = groups\r\n\r\n                //console.log('User', _user)\r\n                resolve(_user)\r\n            })\r\n        })\r\n    }\r\n\r\n    const setUserState = async(username, status)=>{\r\n        return await new Promise(async(resolve, reject) => {\r\n            let apiName = 'AdminQueries';\r\n            let path = status ? '/enableUser' : '/disableUser';\r\n            let headers= {\r\n                    'Content-Type' : 'application/json',\r\n                    Authorization: `${(await Auth.currentSession()).getAccessToken().getJwtToken()}`\r\n                } \r\n            API.post(apiName, path, {body: {\"username\": username}, headers})\r\n            .then((result)=>{\r\n                console.log(result);\r\n                resolve(result)\r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n                reject(error)\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <UserContext.Provider value={{listUsers, getUser, setUserState}}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default UserProvider\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\users_admin\\UsersAdmin.jsx",["187","188","189"],"import React, {useEffect, useContext, useState} from 'react'\r\nimport {Grid} from '@material-ui/core';\r\nimport UserDetail from './UserDetail';\r\nimport UserList from './UserList';\r\n\r\nimport { UserContext } from './../../../context/UserProvider';\r\n\r\nconst UsersAdmin = ({setSelectedIndex}) => {\r\n\r\n    const {listUsers}  = useContext(UserContext)\r\n\r\n    const [currentUserIdx, setCurrentUserIdx] = useState(-1)\r\n\r\n    const [username, setUsername] = useState('')\r\n\r\n    const [userList, setUserList] = useState([])\r\n\r\n    useEffect(() => {\r\n        setSelectedIndex(3)\r\n    }) \r\n\r\n    useEffect(async() => {\r\n        listUsers()\r\n        .then((users) => {\r\n            setUserList(users.map(element => {\r\n                return(element)\r\n            }))\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(currentUserIdx >= 0){\r\n            setUsername(userList[currentUserIdx].Username)\r\n        }\r\n    }, [currentUserIdx])\r\n\r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={12} md={8} xl={9}>\r\n                {username !== '' ? (\r\n                    <UserDetail username= {username}/>\r\n                ) : (null)}\r\n            </Grid>\r\n            <Grid item xs={12} md={4} xl={3}>\r\n                <UserList list={userList} index={currentUserIdx} setIndex={setCurrentUserIdx} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default UsersAdmin\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\users_admin\\UserDetail.jsx",["190","191","192","193","194"],"import React, {useContext, useState, useEffect} from 'react'\r\n\r\nimport {makeStyles, Grid, Card, CardHeader, CardContent, Divider , Typography, IconButton, TextField, Dialog, ButtonGroup, DialogContent, Button } from '@material-ui/core';\r\nimport clsx from 'clsx'\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle'\r\n\r\nimport { UserContext } from './../../../context/UserProvider';\r\nimport { AuthContext } from './../../../context/AuthProvider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardtitle: {\r\n        fontSize: '1.5rem',\r\n    },\r\n    typography: {\r\n        fontSize: '0.7rem',\r\n        [theme.breakpoints.up('sm')]: {\r\n          fontSize: '0.8rem',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n          fontSize: '1rem',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n          fontSize: '1.2rem',\r\n        },\r\n        [theme.breakpoints.up('xl')]: {\r\n          fontSize: '1.5rem',\r\n        },\r\n    },\r\n    typography_gren: {\r\n        color: 'green'\r\n    },\r\n    typography_red: {    \r\n        color: 'red'\r\n    },\r\n    title: {\r\n        fontWeight: 600,\r\n    },\r\n  }));\r\n\r\n\r\nconst UserDetail = ({username}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const {getUser, setUserState}  = useContext(UserContext)\r\n    const {userInfo}  = useContext(AuthContext)\r\n\r\n    const [info, setinfo] = useState({})\r\n\r\n    useEffect(() => {\r\n        if(username !== ''){\r\n            getUser(username)\r\n            .then((user)=>{\r\n                setinfo(user)\r\n            })\r\n        }\r\n        console.log(userInfo.username);\r\n    }, [username])\r\n\r\n    const handleClic = (state)=>{\r\n        setUserState(username, state)\r\n        .then(()=>{\r\n            setinfo((user =>{\r\n                return({\r\n                    ...user,\r\n                    Enabled: state\r\n                })\r\n            }))\r\n        })\r\n    }\r\n\r\n    const options = () => {\r\n        if (userInfo.username !== username){\r\n            return(\r\n                <Card elevation={1}> \r\n                    <CardContent>\r\n                        <ButtonGroup>\r\n                            {\r\n                                info.Enabled ? (\r\n                                    <Button variant=\"contained\" color=\"secondary\" onClick={() => {handleClic(false)}}>Disable</Button>\r\n                                ) : (\r\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => {handleClic(true)}}>Enable</Button>\r\n                                )\r\n                            }\r\n                        </ButtonGroup>\r\n                    </CardContent>\r\n                </Card>\r\n            )\r\n        } else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    const getAccessLevelString = (groups) => {\r\n        console.log('groups', groups )\r\n        let result = 'Viwer'\r\n        if(groups){\r\n            groups.forEach(group => {\r\n                if (group.search('Prod') > 0) result = 'Production'\r\n                if (group.search('Admin') > 0) result = 'Administrator'\r\n                if (group.search('Viwer') > 0) result = 'Viwer'\r\n            })\r\n        }\r\n        return result\r\n    }\r\n\r\n    return (\r\n        <Grid container direction=\"column\" spacing={1}>\r\n            <Grid item>\r\n                {options()}\r\n            </Grid>\r\n            <Grid item>\r\n                <Card elevation={1}>\r\n                    <CardHeader\r\n                        title={username}\r\n                        subheader={info.sub}\r\n                        titleTypographyProps={{className: classes.cardtitle}}\r\n                    />\r\n                    <Divider/>\r\n                    <Grid container component={CardContent} direction='column' spacing={4}>\r\n                        <Grid container item xs={12} justify=\"center\" alignItems=\"center\">\r\n                            <Grid container item xs={5} justify=\"center\" alignItems=\"center\">\r\n                              <Grid item xs={12} sm={10} md={8}>\r\n                                <AccountCircleIcon color=\"primary\" style={{ fontSize: 100 }}/>\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Grid container item xs={7} spacing={4}>\r\n                              <Grid container item xs={12} spacing={1}>\r\n                                <Grid item xs={12} component={Typography} className={clsx(classes.typography, classes.title)}>\r\n                                  Name:\r\n                                </Grid>\r\n                                <Grid item xs={12} component={Typography} className={classes.typography}>\r\n                                  {info.name}\r\n                                </Grid>\r\n                              </Grid>\r\n                              <Grid container item xs={12} spacing={1}>\r\n                                <Grid item xs={12} component={Typography} className={clsx(classes.typography, classes.title)}>\r\n                                  Family name:\r\n                                </Grid>\r\n                                <Grid item xs={12} component={Typography} className={classes.typography}>\r\n                                  {info.family_name}\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} direction=\"column\" alignItems=\"center\" spacing={2}>\r\n                            <Grid container item xs={10} spacing={1}>\r\n                              <Grid item xs={5} component={Typography} className={clsx(classes.typography, classes.title)}>\r\n                                Status:\r\n                              </Grid>\r\n                              <Grid item xs={7} component={Typography} className={clsx(classes.typography, {[classes.typography_gren]: info.UserStatus === 'CONFIRMED', [classes.typography_red]: info.UserStatus !== 'CONFIRMED' })}>\r\n                                {info.UserStatus}\r\n                              </Grid>                              \r\n                            </Grid>\r\n                            <Grid container item xs={10} spacing={1}>\r\n                              <Grid item xs={5} component={Typography} className={clsx(classes.typography, classes.title)}>\r\n                                Enabled:\r\n                              </Grid>\r\n                              <Grid item xs={7} component={Typography} className={clsx(classes.typography, {[classes.typography_gren]: info.Enabled, [classes.typography_red]: !info.Enabled})}>\r\n                                {info.Enabled ? \"Yes\" : \"No\"}\r\n                              </Grid>                              \r\n                            </Grid>\r\n                            <Grid container item xs={10} spacing={1}>\r\n                              <Grid item xs={5} component={Typography} className={clsx(classes.typography, classes.title)}>\r\n                                Email:\r\n                              </Grid>\r\n                              <Grid item xs={7} component={Typography} className={classes.typography}>\r\n                                {info.email}\r\n                              </Grid>                              \r\n                            </Grid>\r\n                            <Grid container item xs={10} spacing={1}>\r\n                              <Grid item xs={5} component={Typography} className={clsx(classes.typography, classes.title)}>  \r\n                                Email verified:\r\n                              </Grid>\r\n                              <Grid item xs={7} component={Typography} className={clsx(classes.typography, {[classes.typography_gren]: info.email_verified, [classes.typography_red]: !info.email_verified})}>\r\n                                {info.email_verified ? \"Yes\" : \"No\"}\r\n                              </Grid>                              \r\n                            </Grid>\r\n                            <Grid container item xs={10} spacing={1}>\r\n                              <Grid item xs={5} component={Typography} className={clsx(classes.typography, classes.title)}>  \r\n                                Group:\r\n                              </Grid>\r\n                              <Grid item xs={7} component={Typography} className={classes.typography}>\r\n                                {getAccessLevelString(info.Groups)}\r\n                              </Grid>                              \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Card>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default UserDetail\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\users_admin\\UserList.jsx",["195","196","197"],"import React, {useContext, useEffect, useState} from 'react'\r\nimport {makeStyles, Paper, Card, CardHeader, Divider, CardContent, List, ListItem, ListItemText, ListItemIcon} from '@material-ui/core';\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nimport { green, red } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n  }));\r\n\r\nconst UserList = ({list, index, setIndex}) => {\r\n\r\n    const classes = useStyles(); \r\n\r\n    const getindex = () => {\r\n        return index\r\n    }\r\n\r\n    const getIcon = (status) =>{\r\n        if(status === 'CONFIRMED'){\r\n            return(<DoneIcon style={{ color: green[500] }}/>)\r\n        }else{\r\n            return(<ClearIcon style={{ color: red[500] }}/>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card elevation={3}>\r\n            <CardHeader\r\n                title={'User List'}\r\n            />\r\n            <Divider/>\r\n            <CardContent>\r\n                <Paper style={{maxHeight: '600px', overflow: 'auto'}}>\r\n                    <List>\r\n                        {\r\n                            list.map((element, index) => {\r\n                                return(\r\n                                    <ListItem \r\n                                        button\r\n                                        key={index} \r\n                                        className={classes.nested}\r\n                                        selected={getindex() === index}\r\n                                        onClick={() => setIndex(index)}\r\n                                    >\r\n                                        <ListItemIcon>\r\n                                            {getIcon(element.UserStatus)}\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={element.Username} />\r\n                                    </ListItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                </Paper>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default UserList\r\n",{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":203,"column":11,"nodeType":"204","messageId":"205","endLine":203,"endColumn":27},{"ruleId":"202","severity":1,"message":"206","line":3,"column":89,"nodeType":"204","messageId":"205","endLine":3,"endColumn":98},{"ruleId":"202","severity":1,"message":"207","line":3,"column":100,"nodeType":"204","messageId":"205","endLine":3,"endColumn":109},{"ruleId":"208","severity":1,"message":"209","line":63,"column":8,"nodeType":"210","endLine":63,"endColumn":20,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":91,"column":81,"nodeType":"214","messageId":"215","endLine":91,"endColumn":83},{"ruleId":"208","severity":1,"message":"216","line":27,"column":8,"nodeType":"210","endLine":27,"endColumn":14,"suggestions":"217"},{"ruleId":"208","severity":1,"message":"218","line":22,"column":15,"nodeType":"219","endLine":29,"endColumn":6},{"ruleId":"208","severity":1,"message":"216","line":29,"column":8,"nodeType":"210","endLine":29,"endColumn":10,"suggestions":"220"},{"ruleId":"208","severity":1,"message":"221","line":35,"column":8,"nodeType":"210","endLine":35,"endColumn":24,"suggestions":"222"},{"ruleId":"202","severity":1,"message":"223","line":3,"column":80,"nodeType":"204","messageId":"205","endLine":3,"endColumn":90},{"ruleId":"202","severity":1,"message":"224","line":3,"column":92,"nodeType":"204","messageId":"205","endLine":3,"endColumn":101},{"ruleId":"202","severity":1,"message":"225","line":3,"column":103,"nodeType":"204","messageId":"205","endLine":3,"endColumn":109},{"ruleId":"202","severity":1,"message":"226","line":3,"column":124,"nodeType":"204","messageId":"205","endLine":3,"endColumn":137},{"ruleId":"208","severity":1,"message":"227","line":58,"column":8,"nodeType":"210","endLine":58,"endColumn":18,"suggestions":"228"},{"ruleId":"202","severity":1,"message":"229","line":1,"column":16,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"230","line":1,"column":28,"nodeType":"204","messageId":"205","endLine":1,"endColumn":37},{"ruleId":"202","severity":1,"message":"231","line":1,"column":39,"nodeType":"204","messageId":"205","endLine":1,"endColumn":47},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'functio_template' is assigned a value but never used.","Identifier","unusedVar","'FormLabel' is defined but never used.","'FormGroup' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.index'. Either include it or remove the dependency array. If 'setled1' needs the current value of 'props.index', you can also switch to useReducer instead of useState and read 'props.index' in the reducer.","ArrayExpression",["234"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'listUsers'. Either include it or remove the dependency array.",["235"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["236"],"React Hook useEffect has a missing dependency: 'userList'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setUsername' needs the current value of 'userList'.",["237"],"'IconButton' is defined but never used.","'TextField' is defined but never used.","'Dialog' is defined but never used.","'DialogContent' is defined but never used.","React Hook useEffect has missing dependencies: 'getUser' and 'userInfo.username'. Either include them or remove the dependency array.",["238"],"'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},"Update the dependencies array to be: [deviceList, props.index]",{"range":"249","text":"250"},"Update the dependencies array to be: [info, listUsers]",{"range":"251","text":"252"},"Update the dependencies array to be: [listUsers]",{"range":"253","text":"254"},"Update the dependencies array to be: [currentUserIdx, userList]",{"range":"255","text":"256"},"Update the dependencies array to be: [getUser, userInfo.username, username]",{"range":"257","text":"258"},[2627,2639],"[deviceList, props.index]",[820,826],"[info, listUsers]",[772,774],"[listUsers]",[914,930],"[currentUserIdx, userList]",[1575,1585],"[getUser, userInfo.username, username]"]
[{"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\index.js":"1","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\App.js":"2","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\themeConfig.js":"3","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\EventProvider.js":"4","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\CompanyProvider.js":"5","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\AuthProvider.js":"6","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Main.jsx":"7","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\Amplify.js":"8","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\UserPool.js":"9","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\graphql\\queries_user.js":"10","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Container.jsx":"11","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Login.jsx":"12","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\aws-exports.js":"13","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\ContentMain.jsx":"14","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\login\\NewPassword.jsx":"15","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceAdmin.jsx":"16","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\userProfile\\Profile.jsx":"17","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\Dashboard.jsx":"18","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\DeviceProvider.js":"19","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\login\\Credentials.jsx":"20","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Sidebar.jsx":"21","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Navbar.jsx":"22","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\ThreeLedTest.jsx":"23","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarMenu.jsx":"24","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarUser.jsx":"25","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarHeader.jsx":"26","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\componets\\CompanySelector.jsx":"27","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\WidgetBase.jsx":"28","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceCardSelector.jsx":"29","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\TempControl.jsx":"30","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\TempPressureControl.jsx":"31","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\cards\\DeviceCardTempPressureControl.jsx":"32","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\cards\\DeviceCardBase.jsx":"33","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\cards\\DeviceCardTempControl.jsx":"34","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\cards\\DeviceCardThreeLedTest.jsx":"35","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceList.jsx":"36","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceListHeaderItem.jsx":"37","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\graphql\\mutations.js":"38"},{"size":219,"mtime":1612381714631,"results":"39","hashOfConfig":"40"},{"size":670,"mtime":1616842988300,"results":"41","hashOfConfig":"40"},{"size":209,"mtime":1617472158302,"results":"42","hashOfConfig":"40"},{"size":3120,"mtime":1617472158283,"results":"43","hashOfConfig":"40"},{"size":3883,"mtime":1615833466213,"results":"44","hashOfConfig":"40"},{"size":7171,"mtime":1617572183321,"results":"45","hashOfConfig":"40"},{"size":909,"mtime":1615833466198,"results":"46","hashOfConfig":"40"},{"size":492,"mtime":1615833466198,"results":"47","hashOfConfig":"40"},{"size":275,"mtime":1612382324527,"results":"48","hashOfConfig":"40"},{"size":1042,"mtime":1617535383657,"results":"49","hashOfConfig":"40"},{"size":1574,"mtime":1617472158251,"results":"50","hashOfConfig":"40"},{"size":2885,"mtime":1617533169091,"results":"51","hashOfConfig":"40"},{"size":793,"mtime":1616535838230,"results":"52","hashOfConfig":"40"},{"size":2084,"mtime":1617472158254,"results":"53","hashOfConfig":"40"},{"size":7007,"mtime":1616014904998,"results":"54","hashOfConfig":"40"},{"size":1041,"mtime":1617472158266,"results":"55","hashOfConfig":"40"},{"size":15050,"mtime":1617572948975,"results":"56","hashOfConfig":"40"},{"size":2470,"mtime":1617472158257,"results":"57","hashOfConfig":"40"},{"size":10323,"mtime":1617536506899,"results":"58","hashOfConfig":"40"},{"size":3941,"mtime":1616014904998,"results":"59","hashOfConfig":"40"},{"size":1963,"mtime":1617472158256,"results":"60","hashOfConfig":"40"},{"size":3707,"mtime":1617472158255,"results":"61","hashOfConfig":"40"},{"size":3037,"mtime":1617472158262,"results":"62","hashOfConfig":"40"},{"size":1223,"mtime":1616014904982,"results":"63","hashOfConfig":"40"},{"size":1605,"mtime":1617554735940,"results":"64","hashOfConfig":"40"},{"size":1135,"mtime":1616014904982,"results":"65","hashOfConfig":"40"},{"size":1378,"mtime":1615833466198,"results":"66","hashOfConfig":"40"},{"size":3573,"mtime":1617472158265,"results":"67","hashOfConfig":"40"},{"size":926,"mtime":1617472158266,"results":"68","hashOfConfig":"40"},{"size":1542,"mtime":1617472158259,"results":"69","hashOfConfig":"40"},{"size":2162,"mtime":1617472158260,"results":"70","hashOfConfig":"40"},{"size":7730,"mtime":1617472158274,"results":"71","hashOfConfig":"40"},{"size":4166,"mtime":1617565803013,"results":"72","hashOfConfig":"40"},{"size":5374,"mtime":1617472158273,"results":"73","hashOfConfig":"40"},{"size":6608,"mtime":1617472158275,"results":"74","hashOfConfig":"40"},{"size":1110,"mtime":1617472158268,"results":"75","hashOfConfig":"40"},{"size":2145,"mtime":1617472158270,"results":"76","hashOfConfig":"40"},{"size":6028,"mtime":1617472158287,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"yjv75u",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"80"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"80"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"80"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\index.js",[],["170","171"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\App.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\themeConfig.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\EventProvider.js",["172"],"import React, { useState, useRef, useEffect } from 'react'\r\n\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport {makeStyles, Snackbar, Backdrop, CircularProgress } from '@material-ui/core';\r\n\r\nexport const EventContext = React.createContext()\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n      },\r\n  }));\r\n\r\nconst EventProvider = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const timeout = useRef(0)\r\n    const errormsg = useRef('')\r\n    const [alertArray, setalertArray] = useState([])\r\n\r\n    const newAlert = (severity, message) => {\r\n        console.log('severity', severity)\r\n        setalertArray(alertArray.concat([\r\n            genAlert(severity, message)\r\n    ]))\r\n    }\r\n\r\n    const genAlert = (severity, message)=>{\r\n        \r\n        console.log('severity', severity)\r\n        return(\r\n            <Snackbar \r\n                key={alertArray.length}\r\n                open={true} \r\n                autoHideDuration={10000} \r\n                onClose={()=>{deleteAlert(alertArray.length)}} \r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }} \r\n            >\r\n                <Alert \r\n                    onClose={()=>{deleteAlert(alertArray.length)}} \r\n                    severity={severity}\r\n                >\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n        )\r\n    }\r\n\r\n    const newError = (message)=>{\r\n        newAlert(\"error\", message)\r\n    }\r\n    const newWarning = (message)=>{\r\n        newAlert(\"warning\", message)\r\n    }\r\n    const newInfo = (message)=>{\r\n        newAlert(\"info\", message)\r\n    }\r\n    const newSuccess = (message)=>{\r\n        newAlert(\"success\", message)\r\n    }\r\n\r\n    const deleteAlert = (key)=> {\r\n        //console.log('Delete', key)\r\n        const array = alertArray\r\n        array.splice(key, 1)\r\n        //console.log('Array', alertArray)\r\n        setalertArray(array)\r\n    }\r\n\r\n    const setBackdrop = (_timeout, _timeoutMessage) => {\r\n        timeout.current = _timeout\r\n        errormsg.current = _timeoutMessage\r\n        setOpen(true)\r\n    }\r\n\r\n    const resetBackdrop = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(open){\r\n            const timer = setTimeout(()=>{\r\n                setOpen((_open) => {\r\n                    if(_open){\r\n                        newError(errormsg.current)\r\n                    }\r\n                    return false\r\n                })\r\n                \r\n               }, timeout.current)\r\n               return () => clearTimeout(timer);\r\n        }\r\n    }, [open])\r\n\r\n    return (\r\n        <EventContext.Provider value={{newError, newWarning, newInfo, newSuccess, setBackdrop, resetBackdrop}}>\r\n            {alertArray.length > 0 ? alertArray : null }\r\n            <Backdrop className={classes.backdrop} open={open}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            {props.children}\r\n        </EventContext.Provider>\r\n    )\r\n}\r\n\r\nexport default EventProvider\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\CompanyProvider.js",["173","174"],"\r\n// LIBRARIS\r\nimport React, {useState, useEffect, useContext, useRef} from 'react'\r\n\r\nimport { API, Storage } from 'aws-amplify'\r\nimport { companyByName, listCompanys } from './../graphql/queries_user'\r\nimport { EventContext } from \"../context/EventProvider\"\r\nimport { AuthContext } from \"../context/AuthProvider\";\r\n\r\n\r\n\r\nexport const CompanyContext = React.createContext()\r\n\r\nconst CompanyProvider = (props) => {\r\n\r\n    const {newError} = useContext(EventContext)\r\n    const {state} = useContext(AuthContext)\r\n    const [info, setInfo] = useState(false)\r\n\r\n    //const [companyList, setcompanyList] = useState([{}])\r\n    const [ActualCompany, setActualCompany] = useState(false)\r\n    const companyList = useRef(false)\r\n\r\n    useEffect(() => {\r\n        const func = async()=>{\r\n            if (state.logged){\r\n                try {\r\n                    const list = await getCompanyList()\r\n                    companyList.current = list\r\n                    setActualCompany(0)\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n                \r\n            }\r\n        }\r\n        func()\r\n    }, [state.logged])\r\n\r\n    useEffect(() => {\r\n        if(ActualCompany !== false) {\r\n            setInfo(companyList.current[ActualCompany])\r\n        }\r\n    }, [ActualCompany])\r\n\r\n    useEffect(() => {\r\n        setDocumentInfo(info)\r\n    }, [info.name, info.faviIconUrl])\r\n\r\n    const setCompanyName = (name)=>{\r\n        loadPublicInfo(name)\r\n    }\r\n\r\n    const getS3Url = async(key)=>{\r\n        try {\r\n            const url = await Storage.get(key,  {\r\n                download: false,\r\n            })\r\n            return url\r\n        } catch (error) {\r\n            console.log(error)\r\n            newError(error.message)\r\n            return ''\r\n        }\r\n    }\r\n\r\n    const loadPublicInfo = async(name)=>{\r\n        try {\r\n            // Get public info\r\n            const result = await API.graphql({ \r\n                query: companyByName, \r\n                variables: { name },\r\n                authMode: 'AWS_IAM' \r\n            })\r\n            const data = result.data.companyByName.items[0]\r\n\r\n            // Change Init imagen\r\n            const initImgURL = await getS3Url(data.initImg.key) \r\n            const faviIconUrl = await getS3Url(data.faviIcon.key)\r\n            setInfo({\r\n                id: '',\r\n                name: data.name,\r\n                initImgURL,\r\n                faviIconUrl\r\n            })\r\n\r\n        } catch (error) {\r\n            newError(error.message)\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const setDocumentInfo = (data) => {\r\n        // Change documment title\r\n        document.title= data.name\r\n\r\n        // Change favicon\r\n        const favicon= document.getElementById(\"favicon\")\r\n        favicon.href = data.faviIconUrl\r\n    }\r\n    \r\n    const getCompanyList = async()=>{\r\n        return await new Promise((resolve, reject) => {\r\n            API.graphql({ \r\n                query: listCompanys, \r\n            })\r\n            .then(async(result)=>{\r\n\r\n                var arr =result.data.listCompanys.items\r\n                var results = await Promise.all(arr.map(async (item) => {\r\n                    item['faviIconUrl'] = await getS3Url(item.faviIcon.key)\r\n                        delete item['faviIcon']\r\n                        item['initImgUrl'] = await getS3Url(item.initImg.key)\r\n                        delete item['initImg']\r\n                    return item;\r\n                }));\r\n                resolve(results)\r\n            })\r\n            .catch((err) => {\r\n                reject(err)\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <CompanyContext.Provider value={{info, setCompanyName, companyList: companyList.current, setActualCompany}}>\r\n            {props.children}\r\n        </CompanyContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CompanyProvider\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\AuthProvider.js",["175","176"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Main.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\Amplify.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\UserPool.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\graphql\\queries_user.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Container.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\Login.jsx",["177","178"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\aws-exports.js",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\ContentMain.jsx",["179"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Switch, \r\n  Route,\r\n} from 'react-router-dom'\r\nimport clsx from 'clsx';\r\n\r\nimport Profile from './userProfile/Profile';\r\nimport Dashboard from './dashboard/Dashboard';\r\nimport DeviceAdmin from './device_admin/DeviceAdmin';\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: 0,\r\n      [theme.breakpoints.up('sm')]:{\r\n        marginLeft: theme.spacing(9),\r\n      }\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: drawerWidth,\r\n    },\r\n}));\r\n\r\nconst ContentMain = ({open, setSelectedIndex}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <main \r\n          className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}\r\n        >\r\n          <div className={classes.toolbar} />\r\n          <Switch>\r\n            <Route path='/profile'>\r\n              <Profile setSelectedIndex={setSelectedIndex}/>\r\n            </Route>\r\n            <Route path='/device-admin/:idx?' render={(props)=>(<DeviceAdmin {...props} setSelectedIndex={setSelectedIndex}/>)}>\r\n            </Route>\r\n            <Route path='/'>\r\n              <Dashboard setSelectedIndex={setSelectedIndex}/>\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ContentMain\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\login\\NewPassword.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceAdmin.jsx",["180"],"import React, {useEffect, useState} from 'react'\r\nimport {Grid} from '@material-ui/core';\r\n\r\n  \r\nimport DeviceList from './DeviceList';\r\nimport DeviceCardSelector from './DeviceCardSelector';\r\n\r\nconst DeviceAdmin = (props) => {\r\n\r\n    const [selectedDeviceIndex, setSelectedDeviceIndex] = useState(0)\r\n\r\n    useEffect(() => {\r\n        props.setSelectedIndex(2)\r\n      }, [])\r\n\r\n      useEffect(() => {\r\n        const idx = props.match.params?.idx\r\n        setSelectedDeviceIndex(() => {return idx ? idx : 0 })\r\n      }, [props.match.params])\r\n\r\n      const setIndex = (idx) => {\r\n        props.history.push(`/device-admin/${idx}`)\r\n      }\r\n      \r\n    return (\r\n        <Grid container spacing={1}>\r\n            <Grid item xs={12} md={8} xl={9}>\r\n                <DeviceCardSelector index={selectedDeviceIndex}/>\r\n            </Grid>\r\n            <Grid item xs={12} md={4} xl={3}>\r\n                <DeviceList index={selectedDeviceIndex} setIndex={setIndex} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DeviceAdmin\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\userProfile\\Profile.jsx",["181"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\Dashboard.jsx",["182","183","184","185","186"],"import React, {useContext, useState, useEffect} from 'react'\r\nimport {Divider, Grid, Box, Paper, Typography} from '@material-ui/core';\r\n\r\nimport { DeviceContext } from './../../../context/DeviceProvider';\r\n\r\nimport ThreeLedTest from './widgets/ThreeLedTest'\r\nimport TempControl from './widgets/TempControl';\r\nimport TempPressureControl from './widgets/TempPressureControl';\r\n\r\nconst Dashboard = ({setSelectedIndex}) => {\r\n\r\n  const {deviceList, deviceByType} = useContext(DeviceContext)\r\n\r\n  const [DeviceWidgets, setDeviceWidgets] = useState([])\r\n\r\n  useEffect(() => {\r\n    setSelectedIndex(1)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (deviceList.length > 0) {\r\n      setDeviceWidgets(deviceList.map((item, index) =>{\r\n          switch (item.deviceType.name) {\r\n            case '3LedTest':\r\n              return <ThreeLedTest key={index} idx={index} data={item}/>\r\n            case 'TempControl':\r\n              return <TempControl  key={index} idx={index} data={item}/>\r\n            case 'TePreControl':\r\n              return <TempPressureControl  key={index} idx={index} data={item}/>\r\n          }\r\n      }))\r\n    }else{\r\n      setDeviceWidgets([])\r\n    }\r\n  }, [deviceList]) \r\n\r\n  const getComponent = (index) => {\r\n    switch (deviceList?.[index]?.deviceType.shadownName) {\r\n      case '3led':\r\n        return <ThreeLedTest key={index} idx={index} data={deviceList[index]}/>\r\n      case 'TempControl':\r\n        return <TempControl  key={index} idx={index} data={deviceList[index]}/>\r\n      case 'TePreControl':\r\n        return <TempPressureControl  key={index} idx={index} data={deviceList[index]}/>\r\n      default:\r\n        return null\r\n    }\r\n  }\r\n\r\n    return (\r\n          <Grid container spacing={1}> \r\n            {\r\n              deviceByType.map((element, index) => {\r\n                return(\r\n                  <Grid key= {index} item xs={12}>\r\n                    <Typography variant=\"h4\" >{element.name}</Typography>\r\n                    <Divider/>\r\n                    <Grid container component={Box} pt={1} pb={2} px={1} spacing={1}>\r\n                        {element.elements.map((comp) => {\r\n                          //console.log(comp);\r\n                          return(\r\n                                getComponent(comp)\r\n                          )\r\n                        })}\r\n                    </Grid>\r\n                  </Grid>\r\n                )\r\n              })\r\n            }\r\n          </Grid>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\context\\DeviceProvider.js",["187","188"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\login\\Credentials.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Sidebar.jsx",["189","190","191","192","193","194"],"import React from 'react'\r\nimport clsx from 'clsx';\r\nimport { makeStyles, Drawer, Divider, List, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport { MoveToInbox as InboxIcon, \r\n         Mail as MailIcon} from '@material-ui/icons';\r\nimport SidebarHeader from \"./sidebar/SidebarHeader\";\r\nimport SidebarUser from \"./sidebar/SidebarUser\";\r\nimport SidebarMenu from './sidebar/SidebarMenu';\r\n\r\n//import logo from \"./../../img/Logo.png\";\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n        color:'white',\r\n        backgroundColor: '#343A40'\r\n      },\r\n      drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n      },\r\n      drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: 0,\r\n        [theme.breakpoints.up('sm')]:{\r\n          width: theme.spacing(9),\r\n        }\r\n      }\r\n}))\r\n\r\nconst SideBar = (props) => {\r\n\r\n    const {open, onClose} = props\r\n\r\n    const classes = useStyles()\r\n    return (\r\n        <Drawer \r\n          variant=\"permanent\"\r\n          classes={{\r\n          paper: clsx(classes.drawer, {\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n          }),\r\n          }}\r\n          onClose={()=>{onClose()}}\r\n        >\r\n          <SidebarHeader/>\r\n          <Divider/>\r\n          <SidebarUser selectedIndex={props.selectedIndex}/>\r\n          <Divider/>\r\n          <SidebarMenu selectedIndex={props.selectedIndex}/>\r\n        <Divider />\r\n        </Drawer>\r\n    )\r\n}\r\n\r\nexport default SideBar\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\Navbar.jsx",["195"],"import React, {useState, useContext, useEffect} from 'react'\r\nimport clsx from 'clsx';\r\nimport {AppBar, Toolbar, IconButton, makeStyles} from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CompanySelector from './componets/CompanySelector';\r\n\r\nimport { CompanyContext } from './../../context/CompanyProvider';\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonOpen: {\r\n\r\n    },\r\n    menuButtonClose: {\r\n        marginLeft: 0,\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(9),\r\n        },\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n          }),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        //zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarOpen: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    appBarClose: {\r\n        marginLeft: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: theme.spacing(9) + 1,\r\n        },\r\n    }\r\n    \r\n}))\r\n\r\nconst Navbar = (props) => {\r\n\r\n    const {open, onClose, onOpen} = props\r\n    const classes = useStyle()\r\n\r\n    const {companyList, setActualCompany} = useContext(CompanyContext)\r\n\r\n    const [companyValue, setCompanyValue] = useState('')\r\n    const [list, setList] = useState([])\r\n    const [loaded, setloaded] = useState(false)\r\n\r\n    useEffect(() => {\r\n        //console.log('List', companyList);\r\n        if(companyList){\r\n            setList(companyList.map((item, index)=>{\r\n                return { value: index, label: item.name }\r\n              }))\r\n        }\r\n    }, [companyList])\r\n\r\n    useEffect(() => {\r\n        if (list.length > 1){\r\n            setloaded(true)\r\n            setCompanyValue(list[0])\r\n        }else{\r\n            setloaded(false)\r\n            setCompanyValue('')\r\n        }\r\n        //console.log(list);\r\n    }, [list])\r\n\r\n    useEffect(() => {\r\n        if (loaded){\r\n            setActualCompany(companyValue.value)\r\n        }\r\n    }, [companyValue])\r\n\r\n    const ClickHandler = ()=>{\r\n        if(open){\r\n            onClose()\r\n        } else {\r\n            onOpen()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppBar \r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarOpen]: open,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={ClickHandler}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, {\r\n                    [classes.menuButtonOpen]: open,\r\n                    [classes.menuButtonClose]: !open,\r\n                    })}\r\n                >\r\n                    <MenuIcon/>\r\n                </IconButton>\r\n                {\r\n                    loaded ? (<CompanySelector items={list} value={companyValue} setValue={setCompanyValue} />) : null\r\n                }\r\n                \r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\ThreeLedTest.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarMenu.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarUser.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\sidebar\\SidebarHeader.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\componets\\CompanySelector.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\WidgetBase.jsx",["196","197"],"import React, {useState, useContext, useEffect} from 'react'\r\nimport clsx from 'clsx';\r\nimport {makeStyles, Grid, Card, CardHeader, CardContent, Divider, Collapse, Avatar, IconButton, CardActionArea  } from '@material-ui/core';\r\nimport { red, green } from '@material-ui/core/colors';\r\nimport WifiIcon from '@material-ui/icons/Wifi';\r\nimport WifiOffIcon from '@material-ui/icons/WifiOff';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Link } from 'react-router-dom'\r\nimport { DeviceContext } from './../../../../context/DeviceProvider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatarConnected: {\r\n      backgroundColor: green[500],\r\n    },\r\n    avatarDisconnected: {\r\n      backgroundColor: red[500],\r\n    },\r\n    avatar: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    },\r\n    cardtitle: {\r\n        fontSize: '1.5rem',\r\n      },\r\n    cardAction: {\r\n        display: 'flex'\r\n      }\r\n  }));\r\n\r\n  \r\n\r\nconst WidgetBase = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const {} = useContext(DeviceContext)\r\n\r\n    const [state, setstate] = useState(false)\r\n\r\n    useEffect(() => {\r\n        //console.log(props)\r\n        if (props.data) setstate(props.data.connected.state)\r\n    }, [props.data.connected.state])\r\n\r\n    const [expanded, setExpanded] = useState(true);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n      };\r\n\r\n    const avatar = ()=>{\r\n        return(\r\n            <Avatar \r\n                aria-label=\"recipe\" \r\n                className={clsx(classes.avatar, {\r\n                    [classes.avatarConnected]:state ,\r\n                    [classes.avatarDisconnected]:!state ,\r\n                })}\r\n            >\r\n                {state ? (\r\n                    <WifiIcon/>\r\n                ) : (\r\n                    <WifiOffIcon/>\r\n                )}\r\n            </Avatar>\r\n        )\r\n    }\r\n\r\n    const action = ()=>{\r\n        return(\r\n            <IconButton\r\n                className={clsx(classes.expand, {\r\n                    [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"show more\"\r\n            >\r\n                <ExpandMoreIcon />\r\n            </IconButton>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} md={6} lg={4} xl={3}>\r\n            <Card elevation={3}>\r\n                <CardHeader\r\n                    avatar={avatar()}\r\n                    title={props.data.alias}\r\n                    subheader={props.data.name}\r\n                    titleTypographyProps={{className: classes.cardtitle}}\r\n                    action={action()}\r\n                />\r\n                <Divider/>\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardActionArea component={Link} to={`/device-admin/${props.idx}`}>\r\n                        <CardContent>\r\n                            {props.children}\r\n                        </CardContent>\r\n                    </CardActionArea >\r\n                </Collapse>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default WidgetBase\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceCardSelector.jsx",[],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\TempControl.jsx",["198","199","200","201","202","203"],"import React, {useState, useEffect} from 'react'\r\nimport {Grid, Divider, Typography, TextField, Button } from '@material-ui/core';\r\n\r\nimport WidgetBase from './WidgetBase'\r\n\r\nconst TempControl = (props) => {\r\n    return (\r\n        <WidgetBase data={props.data} idx={props.idx}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item xs={6}>\r\n                            <Grid container direction={'column'}>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    Temperature\r\n                                </Grid>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    {props.data.telemetry ? `${props.data.telemetry?.temperature} ºC` : `-- ºC` +  ' / ' + `${props.data.state?.reported?.['sp temperature']} ºC`}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Divider/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container  spacing={3} alignItems=\"center\">\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </WidgetBase>\r\n    )\r\n}\r\n\r\nexport default TempControl\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\dashboard\\widgets\\TempPressureControl.jsx",["204","205","206","207"],"import React from 'react'\r\nimport {Grid, Divider, Typography} from '@material-ui/core';\r\n\r\nimport WidgetBase from './WidgetBase'\r\n\r\nconst TempPressureControl = (props) => {\r\n    return (\r\n        <WidgetBase data={props.data} idx={props.idx}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item xs={6}>\r\n                            <Grid container direction={'column'}>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    Temperature\r\n                                </Grid>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    {props.data.telemetry ? `${props.data.telemetry?.temperature} ºC` : `-- ºC` +  ' / ' + `${props.data.state?.reported?.['sp temperature']} ºC`}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Grid container direction={'column'}>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    Presure\r\n                                </Grid>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    {props.data.telemetry ? `${props.data.telemetry?.pressure} ºC` : `-- bar` +  ' / ' + `${props.data.state?.reported?.['sp pressure']} bar`}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Divider/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container  spacing={3} alignItems=\"center\">\r\n                        \r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </WidgetBase>\r\n    )\r\n}\r\n\r\nexport default TempPressureControl\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\cards\\DeviceCardTempPressureControl.jsx",["208","209","210","211","212","213"],"import React, {useContext, useState, useEffect} from 'react'\r\nimport DeviceCardBase from './DeviceCardBase'\r\nimport {makeStyles, Grid, Divider, Typography, Button, FormControl, TextField, InputLabel, Backdrop, CircularProgress    } from '@material-ui/core';\r\n\r\nimport {DeviceContext} from '../../../../context/DeviceProvider'\r\nimport {EventContext} from '../../../../context/EventProvider';\r\n\r\nimport { PubSub } from '../../../../Amplify';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 60,\r\n      [theme.breakpoints.up('md')]:{\r\n        minWidth: 120,\r\n      }\r\n    },\r\n    option: {\r\n        fontSize: '.5rem',\r\n        [theme.breakpoints.up('md')]:{\r\n            fontSize: '1rem'\r\n          }\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nconst DeviceCardTempPressureControl = (props) => {\r\n    const classes = useStyles();\r\n    const {deviceList} = useContext(DeviceContext)\r\n    const {setBackdrop, resetBackdrop} = useContext(EventContext)\r\n\r\n    const [tempSetPoint, setTempSetPoint] = useState(parseFloat(deviceList[props.index].state?.reported?.['sp temperature']))\r\n    const [presSetPoint, setPresSetPoint] = useState(parseFloat(deviceList[props.index].state?.reported?.['sp pressure']))\r\n    const [change, setchange] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setchange(tempSetPoint != deviceList[props.index].state?.reported?.['sp temperature'] || presSetPoint != deviceList[props.index].state?.reported?.['sp pressure'])\r\n        if(!change) {\r\n            resetBackdrop(false)\r\n        }\r\n    }, [tempSetPoint, presSetPoint, change])\r\n\r\n    useEffect(() => {\r\n        setTempSetPoint((parseFloat(deviceList[props.index].state?.reported?.['sp temperature'])))        \r\n        setPresSetPoint((parseFloat(deviceList[props.index].state?.reported?.['sp pressure'])))\r\n    }, [deviceList, props.index])\r\n\r\n    const handleClic = (event)=>{\r\n        event.preventDefault()\r\n        const func = async() => {\r\n            setBackdrop(5000, 'Timeout error updating state')\r\n            const desired = {}\r\n            desired['sp temperature'] = tempSetPoint.toString()\r\n            desired['sp pressure'] = presSetPoint.toString()\r\n            const msg = {desired}\r\n            console.log({state:{...msg}});\r\n            await PubSub.publish(`$aws/things/${deviceList[props.index].name}/shadow/name/${deviceList[props.index].deviceType.shadownName}/update`, {state:{...msg}});\r\n        }\r\n        func()\r\n    }\r\n\r\n    return (\r\n        <DeviceCardBase index={props.index}>\r\n            <Grid container direction={'column'} spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item xs={6}>\r\n                            <Grid container alignItems=\"center\" direction={'column'}>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    Temperature\r\n                                </Grid>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    {deviceList[props.index].telemetry ? `${deviceList[props.index].telemetry?.temperature} ºC` : `-- ºC`}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Grid container alignItems=\"center\" direction={'column'}>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    Pressure\r\n                                </Grid>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    {deviceList[props.index].telemetry ? `${deviceList[props.index].telemetry?.pressure} bar` : `-- bar`}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Divider/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={2} > \r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl} >\r\n                                            <TextField\r\n                                                variant='outlined'\r\n                                                label=\"Temperature setpoint\"\r\n                                                type=\"number\"\r\n                                                value={tempSetPoint}\r\n                                                inputProps={{ step: 0.5 }}\r\n                                                size='small'\r\n                                                InputLabelProps={{\r\n                                                  shrink: true,\r\n                                                }}\r\n                                                onChange={(event)=>{\r\n                                                    console.log(event);\r\n                                                    setTempSetPoint(parseFloat(event.target.value))\r\n                                                }}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl} >\r\n                                            <TextField\r\n                                                variant='outlined'\r\n                                                label=\"Pressure setpoint\"\r\n                                                type=\"number\"\r\n                                                value={presSetPoint}\r\n                                                inputProps={{ step: 0.1 }}\r\n                                                size='small'\r\n                                                InputLabelProps={{\r\n                                                  shrink: true,\r\n                                                }}\r\n                                                onChange={(event)=>{\r\n                                                    console.log(event);\r\n                                                    setPresSetPoint(parseFloat(event.target.value))\r\n                                                }}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <Button \r\n                                variant=\"contained\" \r\n                                color=\"primary\" \r\n                                onClick={(event)=>{handleClic(event)}} \r\n                                disabled = {!change}\r\n                            >Set</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </DeviceCardBase>\r\n        \r\n    )\r\n}\r\n\r\nexport default DeviceCardTempPressureControl\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\cards\\DeviceCardBase.jsx",["214","215"],"C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\cards\\DeviceCardTempControl.jsx",["216","217","218","219","220"],"import React, {useContext, useState, useEffect} from 'react'\r\nimport DeviceCardBase from './DeviceCardBase'\r\nimport {makeStyles, Grid, Divider, Typography, Button, FormControl, TextField, InputLabel, Backdrop, CircularProgress    } from '@material-ui/core';\r\n\r\nimport {DeviceContext} from '../../../../context/DeviceProvider'\r\nimport {EventContext} from '../../../../context/EventProvider';\r\n\r\nimport { PubSub } from '../../../../Amplify';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 60,\r\n      [theme.breakpoints.up('md')]:{\r\n        minWidth: 120,\r\n      }\r\n    },\r\n    option: {\r\n        fontSize: '.5rem',\r\n        [theme.breakpoints.up('md')]:{\r\n            fontSize: '1rem'\r\n          }\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nconst DeviceCardTempControl = (props) => {\r\n    const classes = useStyles();\r\n    const {deviceList} = useContext(DeviceContext)\r\n    const {setBackdrop, resetBackdrop} = useContext(EventContext)\r\n\r\n    const [setPoint, setSetPoint] = useState(parseFloat(deviceList[props.index].state?.reported?.['sp temperature']))\r\n    const [change, setchange] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setchange(setPoint != deviceList[props.index].state?.reported?.['sp temperature'])\r\n        if(!change) {\r\n            resetBackdrop(false)\r\n        }\r\n    }, [setPoint, change])\r\n\r\n    useEffect(() => {\r\n        setSetPoint((parseFloat(deviceList[props.index].state?.reported?.['sp temperature'])))\r\n    }, [deviceList, props.index])\r\n\r\n    const handleClic = (event)=>{\r\n        event.preventDefault()\r\n        const func = async() => {\r\n            setBackdrop(5000, 'Timeout error updating state')\r\n            const desired = {}\r\n            desired['sp temperature'] = setPoint.toString()\r\n            const msg = {desired}\r\n            console.log({state:{...msg}});\r\n            await PubSub.publish(`$aws/things/${deviceList[props.index].name}/shadow/name/${deviceList[props.index].deviceType.shadownName}/update`, {state:{...msg}});\r\n        }\r\n        func()\r\n    }\r\n\r\n    return (\r\n        <DeviceCardBase index={props.index}>\r\n            <Grid container direction={'column'} spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\">\r\n                        <Grid item xs={6}>\r\n                            <Grid container alignItems=\"center\" direction={'column'}>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    Temperature\r\n                                </Grid>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    {deviceList[props.index].telemetry ? `${deviceList[props.index].telemetry?.temperature} ºC` : `-- ºC`}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Divider/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={2} > \r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <FormControl variant=\"outlined\" className={classes.formControl} >\r\n                                            <TextField\r\n                                                variant='outlined'\r\n                                                label=\"Temperature setpoint\"\r\n                                                type=\"number\"\r\n                                                value={setPoint}\r\n                                                inputProps={{ step: 0.5 }}\r\n                                                size='small'\r\n                                                InputLabelProps={{\r\n                                                  shrink: true,\r\n                                                }}\r\n                                                onChange={(event)=>{\r\n                                                    console.log(event);\r\n                                                    setSetPoint(parseFloat(event.target.value))\r\n                                                }}\r\n                                            />\r\n                                        </FormControl>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <Button \r\n                                variant=\"contained\" \r\n                                color=\"primary\" \r\n                                onClick={(event)=>{handleClic(event)}} \r\n                                disabled = {!change}\r\n                            >Set</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </DeviceCardBase>\r\n        \r\n    )\r\n}\r\n\r\nexport default DeviceCardTempControl\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\cards\\DeviceCardThreeLedTest.jsx",["221","222","223","224","225"],"import React, {useContext, useState, useEffect} from 'react'\r\nimport DeviceCardBase from './DeviceCardBase'\r\nimport {makeStyles, Grid, Divider, Typography, Button, FormControl, Select, InputLabel, Backdrop, CircularProgress    } from '@material-ui/core';\r\n\r\nimport {DeviceContext} from './../../../../context/DeviceProvider'\r\nimport {EventContext} from './../../../../context/EventProvider';\r\n\r\nimport {PubSub} from './../../../../Amplify';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 60,\r\n      [theme.breakpoints.up('md')]:{\r\n        minWidth: 120,\r\n      }\r\n    },\r\n    option: {\r\n        fontSize: '.5rem',\r\n        [theme.breakpoints.up('md')]:{\r\n            fontSize: '1rem'\r\n          }\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n\r\nconst DeviceCardThreeLedTest = (props) => {\r\n    const classes = useStyles();\r\n    const {deviceList} = useContext(DeviceContext)\r\n    const {setBackdrop, resetBackdrop} = useContext(EventContext)\r\n\r\n    const [led1, setled1] = useState(deviceList[props.index].state?.reported?.['led1'])\r\n    const [led2, setled2] = useState(deviceList[props.index].state?.reported?.['led2'])\r\n    const [led3, setled3] = useState(deviceList[props.index].state?.reported?.['led3'])\r\n\r\n    const [change, setchange] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setchange(led1 !== deviceList[props.index].state?.reported?.['led1'] || led2 !== deviceList[props.index].state?.reported?.['led2'] || led3 !== deviceList[props.index].state?.reported?.['led3'])\r\n        if(!change) {\r\n            resetBackdrop(false)\r\n        }\r\n    }, [led1, led2, led3, change])\r\n\r\n    useEffect(() => {\r\n        setled1(deviceList[props.index].state?.reported?.['led1'])\r\n        setled2(deviceList[props.index].state?.reported?.['led2'])\r\n        setled3(deviceList[props.index].state?.reported?.['led3'])\r\n    }, [deviceList])\r\n\r\n    const handleChange = (onChange, value) => {\r\n        console.log(value);\r\n        if(value == 1){\r\n            onChange('on')\r\n        } else {\r\n            onChange('off')\r\n        }\r\n      };\r\n\r\n    const handleClic = (event)=>{\r\n        event.preventDefault()\r\n        const func = async() => {\r\n            setBackdrop(5000, 'Timeout error updating state')\r\n            const desired = {}\r\n            desired['led1'] = led1\r\n            desired['led2'] = led2\r\n            desired['led3'] = led3\r\n            const msg = {desired}\r\n            await PubSub.publish(`$aws/things/${deviceList[props.index].name}/shadow/name/${deviceList[props.index].deviceType.shadownName}/update`, {state:{...msg}});\r\n        }\r\n        func()\r\n    }\r\n\r\n    const LedValue = (label, state, onChange) => {\r\n\r\n        return(\r\n            <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <FormControl variant=\"outlined\" className={classes.formControl} size=\"small\">\r\n                        <InputLabel htmlFor=\"age-native-helper\">{label}</InputLabel>\r\n                        <Select\r\n                            native\r\n                            value={state === 'on' ? 1 : 0 }\r\n                            label={label}\r\n                            onChange={((event) => {handleChange(onChange, event.target.value )})}\r\n                        >\r\n                        <option value={0}>Off</option>\r\n                        <option value={1}>On</option>\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <DeviceCardBase index={props.index}>\r\n            <Grid container direction={'column'} spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <Grid container>\r\n                        <Grid item xs={6}>\r\n                            <Grid container alignItems=\"center\" direction={'column'}>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    Temperature\r\n                                </Grid>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    {deviceList[props.index].telemetry ? `${deviceList[props.index].telemetry?.temperature} ºC` : `-- ºC`}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Grid container alignItems=\"center\" direction={'column'}>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    Humidity\r\n                                </Grid>\r\n                                <Grid item component={Typography} align={'center'}  xs={12}>\r\n                                    {deviceList[props.index].telemetry ? `${deviceList[props.index].telemetry?.humidity} %` : `-- %`}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Divider/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={2} > \r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={4} md={4}>\r\n                                    {LedValue('led1', led1, setled1 )}\r\n                                </Grid>\r\n                                <Grid item xs={4} md={4}>\r\n                                    {LedValue('led2', led2, setled2 )}\r\n                                </Grid>\r\n                                <Grid item xs={4} md={4}>\r\n                                    {LedValue('led3', led3, setled3 )}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} >\r\n                            <Button \r\n                                variant=\"contained\" \r\n                                color=\"primary\" \r\n                                onClick={(event)=>{handleClic(event)}}\r\n                                disabled = {!change}\r\n                            >Set</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </DeviceCardBase>\r\n        \r\n    )\r\n}\r\n\r\nexport default DeviceCardThreeLedTest\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceList.jsx",["226"],"import React, {useEffect, useContext}  from 'react'\r\nimport {Paper, Card, CardHeader, Divider, CardContent, List} from '@material-ui/core';\r\n\r\n\r\nimport {DeviceContext} from './../../../context/DeviceProvider'\r\nimport DeviceListHeaderItem from './DeviceListHeaderItem';\r\n\r\nconst DeviceList = ({index, setIndex}) => {\r\n\r\n    const {deviceByType} = useContext(DeviceContext)\r\n\r\n    return (\r\n        <Card elevation={3}>\r\n            <CardHeader\r\n                title={'Device List'}\r\n            />\r\n            <Divider/>\r\n            <CardContent>\r\n                <Paper style={{maxHeight: '600px', overflow: 'auto'}}>\r\n                    <List>\r\n                    {\r\n                        deviceByType.map((item, idx) => {\r\n                            return(\r\n                                <DeviceListHeaderItem key= {idx} item={item} index={index} setIndex={setIndex}/>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n                </Paper>\r\n            </CardContent>\r\n        </Card>\r\n        \r\n    )\r\n}\r\n\r\nexport default DeviceList\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\components\\container\\device_admin\\DeviceListHeaderItem.jsx",["227","228","229"],"import React, {useState, useContext} from 'react'\r\nimport {makeStyles, List, ListItem, ListItemText, ListItemIcon, ListSubheader, Collapse } from '@material-ui/core';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nimport {DeviceContext} from './../../../context/DeviceProvider'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n  }));\r\n\r\nconst DeviceListHeaderItem = ({item, index, setIndex}) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const {deviceList, deviceByType} = useContext(DeviceContext)\r\n\r\n    const [open, setOpen] = useState(true)\r\n\r\n    const handleClick = ()=>{\r\n        setOpen((_open) => {\r\n            return !_open\r\n        })\r\n    }\r\n\r\n    const getindex = () => {\r\n        return index\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ListItem button onClick={handleClick}>\r\n                <ListItemText primary={item.name} />\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    {\r\n                        item.elements.map((item)=>{\r\n                            return( \r\n                                <ListItem \r\n                                    button\r\n                                    key={item} \r\n                                    className={classes.nested}\r\n                                    selected={getindex() === item}\r\n                                    onClick={() => setIndex(item)}\r\n                                >\r\n                                    <ListItemText primary={deviceList[item]?.alias} />\r\n                                </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            </Collapse>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DeviceListHeaderItem\r\n","C:\\Users\\danie\\OneDrive\\Documentos\\Mis proyectos\\Peninsula\\Serverless\\src\\graphql\\mutations.js",[],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":96,"column":8,"nodeType":"236","endLine":96,"endColumn":14,"suggestions":"237"},{"ruleId":"234","severity":1,"message":"238","line":38,"column":8,"nodeType":"236","endLine":38,"endColumn":22,"suggestions":"239"},{"ruleId":"234","severity":1,"message":"240","line":48,"column":8,"nodeType":"236","endLine":48,"endColumn":37,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":3,"column":10,"nodeType":"244","messageId":"245","endLine":3,"endColumn":32},{"ruleId":"234","severity":1,"message":"246","line":40,"column":8,"nodeType":"236","endLine":40,"endColumn":22,"suggestions":"247"},{"ruleId":"234","severity":1,"message":"248","line":43,"column":25,"nodeType":"249","endLine":43,"endColumn":30},{"ruleId":"234","severity":1,"message":"250","line":75,"column":8,"nodeType":"236","endLine":75,"endColumn":22,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":28,"column":5,"nodeType":"254","messageId":"255","endLine":28,"endColumn":12},{"ruleId":"234","severity":1,"message":"256","line":14,"column":10,"nodeType":"236","endLine":14,"endColumn":12,"suggestions":"257"},{"ruleId":"234","severity":1,"message":"258","line":73,"column":8,"nodeType":"236","endLine":73,"endColumn":10,"suggestions":"259"},{"ruleId":"242","severity":1,"message":"260","line":2,"column":29,"nodeType":"244","messageId":"245","endLine":2,"endColumn":34},{"ruleId":"242","severity":1,"message":"261","line":14,"column":10,"nodeType":"244","messageId":"245","endLine":14,"endColumn":23},{"ruleId":"234","severity":1,"message":"258","line":18,"column":6,"nodeType":"236","endLine":18,"endColumn":8,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":22,"column":53,"nodeType":"265","messageId":"266","endLine":22,"endColumn":55},{"ruleId":"267","severity":1,"message":"268","line":23,"column":11,"nodeType":"269","messageId":"270","endLine":30,"endColumn":12},{"ruleId":"242","severity":1,"message":"271","line":9,"column":10,"nodeType":"244","messageId":"245","endLine":9,"endColumn":17},{"ruleId":"234","severity":1,"message":"272","line":106,"column":8,"nodeType":"236","endLine":106,"endColumn":17,"suggestions":"273"},{"ruleId":"242","severity":1,"message":"274","line":3,"column":39,"nodeType":"244","messageId":"245","endLine":3,"endColumn":43},{"ruleId":"242","severity":1,"message":"275","line":3,"column":45,"nodeType":"244","messageId":"245","endLine":3,"endColumn":53},{"ruleId":"242","severity":1,"message":"276","line":3,"column":55,"nodeType":"244","messageId":"245","endLine":3,"endColumn":67},{"ruleId":"242","severity":1,"message":"277","line":3,"column":69,"nodeType":"244","messageId":"245","endLine":3,"endColumn":81},{"ruleId":"242","severity":1,"message":"278","line":4,"column":25,"nodeType":"244","messageId":"245","endLine":4,"endColumn":34},{"ruleId":"242","severity":1,"message":"279","line":5,"column":18,"nodeType":"244","messageId":"245","endLine":5,"endColumn":26},{"ruleId":"234","severity":1,"message":"280","line":93,"column":8,"nodeType":"236","endLine":93,"endColumn":22,"suggestions":"281"},{"ruleId":"282","severity":1,"message":"283","line":53,"column":11,"nodeType":"284","messageId":"255","endLine":53,"endColumn":13},{"ruleId":"234","severity":1,"message":"285","line":60,"column":8,"nodeType":"236","endLine":60,"endColumn":36,"suggestions":"286"},{"ruleId":"242","severity":1,"message":"287","line":1,"column":16,"nodeType":"244","messageId":"245","endLine":1,"endColumn":24},{"ruleId":"242","severity":1,"message":"288","line":1,"column":26,"nodeType":"244","messageId":"245","endLine":1,"endColumn":35},{"ruleId":"242","severity":1,"message":"289","line":2,"column":36,"nodeType":"244","messageId":"245","endLine":2,"endColumn":45},{"ruleId":"242","severity":1,"message":"290","line":2,"column":47,"nodeType":"244","messageId":"245","endLine":2,"endColumn":53},{"ruleId":"291","severity":1,"message":"292","line":18,"column":113,"nodeType":"293","messageId":"294","endLine":18,"endColumn":114},{"ruleId":"291","severity":1,"message":"292","line":18,"column":122,"nodeType":"293","messageId":"294","endLine":18,"endColumn":123},{"ruleId":"291","severity":1,"message":"292","line":18,"column":113,"nodeType":"293","messageId":"294","endLine":18,"endColumn":114},{"ruleId":"291","severity":1,"message":"292","line":18,"column":122,"nodeType":"293","messageId":"294","endLine":18,"endColumn":123},{"ruleId":"291","severity":1,"message":"292","line":28,"column":111,"nodeType":"293","messageId":"294","endLine":28,"endColumn":112},{"ruleId":"291","severity":1,"message":"292","line":28,"column":120,"nodeType":"293","messageId":"294","endLine":28,"endColumn":121},{"ruleId":"242","severity":1,"message":"295","line":3,"column":80,"nodeType":"244","messageId":"245","endLine":3,"endColumn":90},{"ruleId":"242","severity":1,"message":"296","line":3,"column":92,"nodeType":"244","messageId":"245","endLine":3,"endColumn":100},{"ruleId":"242","severity":1,"message":"297","line":3,"column":102,"nodeType":"244","messageId":"245","endLine":3,"endColumn":118},{"ruleId":"298","severity":1,"message":"299","line":39,"column":32,"nodeType":"293","messageId":"255","endLine":39,"endColumn":34},{"ruleId":"298","severity":1,"message":"299","line":39,"column":111,"nodeType":"293","messageId":"255","endLine":39,"endColumn":113},{"ruleId":"234","severity":1,"message":"300","line":43,"column":8,"nodeType":"236","endLine":43,"endColumn":44,"suggestions":"301"},{"ruleId":"234","severity":1,"message":"302","line":43,"column":8,"nodeType":"236","endLine":43,"endColumn":49,"suggestions":"303"},{"ruleId":"234","severity":1,"message":"304","line":43,"column":9,"nodeType":"305","endLine":43,"endColumn":48},{"ruleId":"242","severity":1,"message":"295","line":3,"column":80,"nodeType":"244","messageId":"245","endLine":3,"endColumn":90},{"ruleId":"242","severity":1,"message":"296","line":3,"column":92,"nodeType":"244","messageId":"245","endLine":3,"endColumn":100},{"ruleId":"242","severity":1,"message":"297","line":3,"column":102,"nodeType":"244","messageId":"245","endLine":3,"endColumn":118},{"ruleId":"298","severity":1,"message":"299","line":38,"column":28,"nodeType":"293","messageId":"255","endLine":38,"endColumn":30},{"ruleId":"234","severity":1,"message":"300","line":42,"column":8,"nodeType":"236","endLine":42,"endColumn":26,"suggestions":"306"},{"ruleId":"242","severity":1,"message":"296","line":3,"column":89,"nodeType":"244","messageId":"245","endLine":3,"endColumn":97},{"ruleId":"242","severity":1,"message":"297","line":3,"column":99,"nodeType":"244","messageId":"245","endLine":3,"endColumn":115},{"ruleId":"234","severity":1,"message":"300","line":45,"column":8,"nodeType":"236","endLine":45,"endColumn":34,"suggestions":"307"},{"ruleId":"234","severity":1,"message":"308","line":51,"column":8,"nodeType":"236","endLine":51,"endColumn":20,"suggestions":"309"},{"ruleId":"298","severity":1,"message":"310","line":55,"column":18,"nodeType":"293","messageId":"255","endLine":55,"endColumn":20},{"ruleId":"242","severity":1,"message":"288","line":1,"column":16,"nodeType":"244","messageId":"245","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"276","line":2,"column":51,"nodeType":"244","messageId":"245","endLine":2,"endColumn":63},{"ruleId":"242","severity":1,"message":"311","line":2,"column":65,"nodeType":"244","messageId":"245","endLine":2,"endColumn":78},{"ruleId":"242","severity":1,"message":"312","line":23,"column":24,"nodeType":"244","messageId":"245","endLine":23,"endColumn":36},"no-native-reassign",["313"],"no-negated-in-lhs",["314"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newError'. Either include it or remove the dependency array.","ArrayExpression",["315"],"React Hook useEffect has a missing dependency: 'getCompanyList'. Either include it or remove the dependency array.",["316"],"React Hook useEffect has a missing dependency: 'info'. Either include it or remove the dependency array.",["317"],"no-unused-vars","'KeyboardReturnOutlined' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'refresh', 'user.signInUserSession.accessToken.payload.exp', and 'user.signInUserSession.accessToken.payload.iat'. Either include them or remove the dependency array.",["318"],"Assignments to the 'id' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["319"],"no-dupe-keys","Duplicate key 'content'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["320"],"React Hook useEffect has a missing dependency: 'setSelectedIndex'. Either include it or remove the dependency array. If 'setSelectedIndex' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["321"],"'Paper' is defined but never used.","'DeviceWidgets' is assigned a value but never used.",["322"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'version' is defined but never used.","React Hook useEffect has missing dependencies: 'getDeviceList' and 'messageDispatcher'. Either include them or remove the dependency array.",["323"],"'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemText' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'loaded' and 'setActualCompany'. Either include them or remove the dependency array.",["324"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","React Hook useEffect has a missing dependency: 'props.data'. Either include it or remove the dependency array.",["325"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'InputLabel' is defined but never used.","'Backdrop' is defined but never used.","'CircularProgress' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'deviceList', 'props.index', and 'resetBackdrop'. Either include them or remove the dependency array. If 'setchange' needs the current value of 'props.index', you can also switch to useReducer instead of useState and read 'props.index' in the reducer.",["326"],"React Hook useEffect has missing dependencies: 'deviceList' and 'props.index'. Either include them or remove the dependency array. If 'setstate' needs the current value of 'props.index', you can also switch to useReducer instead of useState and read 'props.index' in the reducer.",["327"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression",["328"],["329"],"React Hook useEffect has a missing dependency: 'props.index'. Either include it or remove the dependency array. If 'setled1' needs the current value of 'props.index', you can also switch to useReducer instead of useState and read 'props.index' in the reducer.",["330"],"Expected '===' and instead saw '=='.","'ListSubheader' is defined but never used.","'deviceByType' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"343","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"354","fix":"360"},"Update the dependencies array to be: [newError, open]",{"range":"361","text":"362"},"Update the dependencies array to be: [getCompanyList, state.logged]",{"range":"363","text":"364"},"Update the dependencies array to be: [info.name, info.faviIconUrl, info]",{"range":"365","text":"366"},"Update the dependencies array to be: [refresh, state.logged, user.signInUserSession.accessToken.payload.exp, user.signInUserSession.accessToken.payload.iat]",{"range":"367","text":"368"},"Update the dependencies array to be: [props.history, state.logged]",{"range":"369","text":"370"},"Update the dependencies array to be: [props]",{"range":"371","text":"372"},"Update the dependencies array to be: [setSelectedIndex]",{"range":"373","text":"374"},{"range":"375","text":"374"},"Update the dependencies array to be: [getDeviceList, info.id, messageDispatcher]",{"range":"376","text":"377"},"Update the dependencies array to be: [companyValue, loaded, setActualCompany]",{"range":"378","text":"379"},"Update the dependencies array to be: [props.data, props.data.connected.state]",{"range":"380","text":"381"},"Update the dependencies array to be: [tempSetPoint, presSetPoint, change, deviceList, props.index, resetBackdrop]",{"range":"382","text":"383"},"Update the dependencies array to be: [deviceList, props.index]",{"range":"384","text":"385"},"Update the dependencies array to be: [setPoint, change, deviceList, props.index, resetBackdrop]",{"range":"386","text":"387"},"Update the dependencies array to be: [led1, led2, led3, change, deviceList, props.index, resetBackdrop]",{"range":"388","text":"389"},{"range":"390","text":"385"},[2674,2680],"[newError, open]",[1142,1156],"[getCompanyList, state.logged]",[1379,1408],"[info.name, info.faviIconUrl, info]",[1159,1173],"[refresh, state.logged, user.signInUserSession.accessToken.payload.exp, user.signInUserSession.accessToken.payload.iat]",[2064,2078],"[props.history, state.logged]",[371,373],"[props]",[2351,2353],"[setSelectedIndex]",[601,603],[4599,4608],"[getDeviceList, info.id, messageDispatcher]",[2660,2674],"[companyValue, loaded, setActualCompany]",[1642,1670],"[props.data, props.data.connected.state]",[1627,1663],"[tempSetPoint, presSetPoint, change, deviceList, props.index, resetBackdrop]",[1353,1394],"[deviceList, props.index]",[1407,1425],"[setPoint, change, deviceList, props.index, resetBackdrop]",[1670,1696],"[led1, led2, led3, change, deviceList, props.index, resetBackdrop]",[1935,1947]]